{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "/Users/zurab/WebstormProjects/chakra-remix-play/app/root.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices.tsx", "../app/routes/notes/SidebarWithHeader.tsx", "../app/utils/db.server.ts", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/$selfInvoiceId.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/NoteCard.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/index.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/new.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/index.tsx", "../app/components/WithLargeQuote.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/SidebarWithHeader.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/NewNoteFormCard.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/NoteCard.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/$noteId.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/index.tsx", "../app/routes/notes/NoteCard.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/new.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from 'react-dom/server'\nimport { CacheProvider } from '@emotion/react'\nimport createEmotionServer from '@emotion/server/create-instance'\nimport { RemixServer } from '@remix-run/react'\nimport type { EntryContext } from '@remix-run/node' // Depends on the runtime you choose\n\nimport { ServerStyleContext } from './context'\nimport createEmotionCache from './createEmotionCache'\n\nexport default function handleRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    remixContext: EntryContext,\n) {\n  const cache = createEmotionCache()\n  const { extractCriticalToChunks } = createEmotionServer(cache)\n\n  const html = renderToString(\n      <ServerStyleContext.Provider value={null}>\n        <CacheProvider value={cache}>\n          <RemixServer context={remixContext} url={request.url} />\n        </CacheProvider>\n      </ServerStyleContext.Provider>,\n  )\n\n  const chunks = extractCriticalToChunks(html)\n\n  const markup = renderToString(\n      <ServerStyleContext.Provider value={chunks.styles}>\n        <CacheProvider value={cache}>\n          <RemixServer context={remixContext} url={request.url} />\n        </CacheProvider>\n      </ServerStyleContext.Provider>,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import React, { createContext } from 'react'\n\nexport interface ServerStyleContextData {\n    key: string\n    ids: Array<string>\n    css: string\n}\n\nexport const ServerStyleContext = createContext<ServerStyleContextData[] | null>(null)\n\nexport interface ClientStyleContextData {\n    reset: () => void\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(null)\n", "import createCache from '@emotion/cache'\n\nexport default function createEmotionCache() {\n    return createCache({ key: 'css' })\n}\n", "// root.tsx\nimport React, { useContext, useEffect } from 'react'\nimport { withEmotionCache } from '@emotion/react'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react'\nimport { MetaFunction, LinksFunction } from '@remix-run/node' // Depends on the runtime you choose\n\nimport { ServerStyleContext, ClientStyleContext } from './context'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n    { rel: 'preconnect', href: 'https://fonts.gstaticom' },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap'\n    },\n  ]\n}\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n    ({ children }: DocumentProps, emotionCache) => {\n      const serverStyleData = useContext(ServerStyleContext);\n      const clientStyleData = useContext(ClientStyleContext);\n\n      // Only executed on client\n      useEffect(() => {\n        // re-link sheet container\n        emotionCache.sheet.container = document.head;\n        // re-inject tags\n        const tags = emotionCache.sheet.tags;\n        emotionCache.sheet.flush();\n        tags.forEach((tag) => {\n          (emotionCache.sheet as any)._insertTag(tag);\n        });\n        // reset cache to reapply global styles\n        clientStyleData?.reset();\n      }, []);\n\n      return (\n          <html lang=\"en\">\n          <head>\n            <Meta />\n            <Links />\n            {serverStyleData?.map(({ key, ids, css }) => (\n                <style\n                    key={key}\n                    data-emotion={`${key} ${ids.join(' ')}`}\n                    dangerouslySetInnerHTML={{ __html: css }}\n                />\n            ))}\n          </head>\n          <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n          </body>\n          </html>\n      );\n    }\n);\n\nexport default function App() {\n    return (\n        <Document>\n            <ChakraProvider>\n                <Outlet />\n            </ChakraProvider>\n        </Document>\n    )\n}\n", "import {Box} from \"@chakra-ui/react\";\nimport {Outlet, useLoaderData} from \"@remix-run/react\";\nimport SidebarWithHeader from \"~/routes/notes/SidebarWithHeader\";\nimport type {Note} from \"@prisma/client\";\nimport type {LoaderFunction} from \"@remix-run/node\";\nimport {db} from \"~/utils/db.server\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\n\nexport default function InvoicesRoute() {\n    const data = useLoaderData<LoaderData>();\n    return (\n        <SidebarWithHeader>\n            <Box p={4}>\n                <Outlet />\n            </Box>\n        </SidebarWithHeader>\n\n    );\n}\n", "import React, { ReactNode } from 'react';\nimport {\n    IconButton,\n    Avatar,\n    Box,\n    CloseButton,\n    Flex,\n    HStack,\n    VStack,\n    Icon,\n    useColorModeValue,\n    Link,\n    Drawer,\n    DrawerContent,\n    Text,\n    Image,\n    useDisclosure,\n    BoxProps,\n    FlexProps,\n    Menu,\n    MenuButton,\n    MenuDivider,\n    MenuItem,\n    MenuList, Button, useColorMode, Stack, Center,\n} from '@chakra-ui/react';\nimport {\n    FiHome,\n    FiTrendingUp,\n    FiCompass,\n    FiStar,\n    FiSettings,\n    FiMenu,\n    FiBell,\n    FiChevronDown,\n} from 'react-icons/fi';\nimport { IconType } from 'react-icons';\nimport { ReactText } from 'react';\nimport {MoonIcon, SunIcon} from \"@chakra-ui/icons\";\n\ninterface LinkItemProps {\n    name: string;\n    icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n    { name: 'Home', icon: FiHome },\n    { name: 'Trending', icon: FiTrendingUp },\n    { name: 'Explore', icon: FiCompass },\n    { name: 'Favourites', icon: FiStar },\n    { name: 'Settings', icon: FiSettings },\n];\n\nexport default function SidebarWithHeader({\n                                              children,\n                                          }: {\n    children: ReactNode;\n}) {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    return (\n        <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\n            <SidebarContent\n                onClose={() => onClose}\n                display={{ base: 'none', md: 'block' }}\n            />\n            <Drawer\n                autoFocus={false}\n                isOpen={isOpen}\n                placement=\"left\"\n                onClose={onClose}\n                returnFocusOnClose={false}\n                onOverlayClick={onClose}\n                size=\"full\">\n                <DrawerContent>\n                    <SidebarContent onClose={onClose} />\n                </DrawerContent>\n            </Drawer>\n            {/* mobilenav */}\n            <MobileNav onOpen={onOpen} />\n            <Box ml={{ base: 0, md: 60 }} p=\"4\">\n                {children}\n            </Box>\n        </Box>\n    );\n}\n\ninterface SidebarProps extends BoxProps {\n    onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n    return (\n        <Box\n            transition=\"3s ease\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderRight=\"1px\"\n            borderRightColor={useColorModeValue('gray.200', 'gray.700')}\n            w={{ base: 'full', md: 60 }}\n            pos=\"fixed\"\n            h=\"full\"\n            {...rest}>\n            <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n                <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\n            </Flex>\n            {LinkItems.map((link) => (\n                <NavItem key={link.name} icon={link.icon}>\n                    {link.name}\n                </NavItem>\n            ))}\n        </Box>\n    );\n};\n\ninterface NavItemProps extends FlexProps {\n    icon: IconType;\n    children: ReactText;\n}\nconst NavItem = ({ icon, children, ...rest }: NavItemProps) => {\n    return (\n        <Link href=\"#\" style={{ textDecoration: 'none' }} _focus={{ boxShadow: 'none' }}>\n            <Flex\n                align=\"center\"\n                p=\"4\"\n                mx=\"4\"\n                borderRadius=\"lg\"\n                role=\"group\"\n                cursor=\"pointer\"\n                _hover={{\n                    bg: 'cyan.400',\n                    color: 'white',\n                }}\n                {...rest}>\n                {icon && (\n                    <Icon\n                        mr=\"4\"\n                        fontSize=\"16\"\n                        _groupHover={{\n                            color: 'white',\n                        }}\n                        as={icon}\n                    />\n                )}\n                {children}\n            </Flex>\n        </Link>\n    );\n};\n\ninterface MobileProps extends FlexProps {\n    onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n    const { colorMode, toggleColorMode } = useColorMode();\n    return (\n        <Flex\n            ml={{ base: 0, md: 60 }}\n            px={{ base: 4, md: 4 }}\n            height=\"20\"\n            alignItems=\"center\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderBottomWidth=\"1px\"\n            borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\n            justifyContent={{ base: 'space-between', md: 'flex-end' }}\n            {...rest}>\n            <IconButton\n                display={{ base: 'flex', md: 'none' }}\n                onClick={onOpen}\n                variant=\"outline\"\n                aria-label=\"open menu\"\n                icon={<FiMenu />}\n            />\n\n            <Text\n                display={{ base: 'flex', md: 'none' }}\n                fontSize=\"2xl\"\n                fontFamily=\"monospace\"\n                fontWeight=\"bold\">\n                Logo\n            </Text>\n\n            <HStack spacing={{ base: '0', md: '6' }}>\n                <Button onClick={toggleColorMode}>\n                    {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n                </Button>\n                <IconButton\n                    size=\"lg\"\n                    variant=\"ghost\"\n                    aria-label=\"open menu\"\n                    icon={<FiBell />}\n                />\n                <Flex alignItems={'center'}>\n                    <Stack direction={'row'} spacing={7}>\n\n                        <Menu>\n                            <MenuButton\n                                as={Button}\n                                rounded={'full'}\n                                variant={'link'}\n                                cursor={'pointer'}\n                                minW={0}>\n                                <Avatar\n                                    size={'sm'}\n                                    src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                />\n                            </MenuButton>\n                            <MenuList alignItems={'center'}>\n                                <br />\n                                <Center>\n                                    <Avatar\n                                        size={'2xl'}\n                                        src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                    />\n                                </Center>\n                                <br />\n                                <Center>\n                                    <p>\u10D6\u10E3\u10E0\u10D0\u10D1</p>\n                                </Center>\n                                <br />\n                                <MenuDivider />\n                                <MenuItem>Your Servers</MenuItem>\n                                <MenuItem>Account Settings</MenuItem>\n                                <MenuItem>Logout</MenuItem>\n                            </MenuList>\n                        </Menu>\n                    </Stack>\n                </Flex>\n            </HStack>\n        </Flex>\n    );\n};\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n    var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n    db = new PrismaClient();\n} else {\n    if (!global.__db) {\n        global.__db = new PrismaClient();\n    }\n    db = global.__db;\n}\n\nexport { db };\n", "import type { SelfInvoice } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\nimport {ActionFunction, LoaderFunction, redirect} from \"@remix-run/node\";\nimport {useCatch, useLoaderData, useParams} from \"@remix-run/react\";\nimport {Box, Center, Heading, Button, Stack, Text, Image, useColorModeValue} from \"@chakra-ui/react\";\n\ntype LoaderData = { selfInvoice: SelfInvoice };\n\nexport const action: ActionFunction = async ({\n                                                 request,\n                                                 params\n                                             }) => {\n    const form = await request.formData();\n    if (form.get(\"_method\") === \"delete\") {\n        const selfInvoice = await db.selfInvoice.findUnique({\n            where: { id: params.selfInvoiceId }\n        });\n        if (!selfInvoice) {\n            throw new Response(\n                \"Can't delete what does not exist\",\n                { status: 404 }\n            );\n        }\n        await db.selfInvoice.delete({ where: { id: params.selfInvoiceId } });\n        return redirect(\"/invoices\");\n    }\n};\n\n\nexport const loader: LoaderFunction = async ({\n                                                 params\n                                             }) => {\n    const selfInvoice = await db.selfInvoice.findUnique({\n        where: { id: params.selfInvoiceId }\n    });\n    if (!selfInvoice) throw new Error(\"SelfInvoice not found\");\n    const data: LoaderData = { selfInvoice };\n    return data;\n};\n\nexport default function SelfInvoiceRoute() {\n    const data = useLoaderData<LoaderData>();\n\n    console.log(data);\n\n    return (\n        <div className=\"main-container\">\n            <Center py={6}>\n                <Box\n                    maxW={'1200px'}\n                    w={'full'}\n                    bg={useColorModeValue('white', 'gray.900')}\n                    boxShadow={'2xl'}\n                    rounded={'md'}\n                    p={6}\n                    overflow={'hidden'}>\n{/*                        {data.selfInvoice?.image && (\n                            <Image\n                                mb={6}\n                                w={'full'}\n                                maxH={'400px'}\n                                maxW={'1200px'}\n                                rounded={'md'}\n                                src={data.selfInvoice?.image}\n                            />\n                        )}*/}\n                    <Stack spacing={3}>\n                        <Heading\n                            whiteSpace={'pre-wrap'}\n                            color={useColorModeValue('gray.700', 'white')}\n                            fontSize={'2xl'}\n                            fontFamily={'body'}>\n                            {data.selfInvoice.contact}\n                        </Heading>\n                        <Text color={'gray.500'} whiteSpace={'pre-wrap'}\n                        >\n                            {data.selfInvoice.reason}\n                        </Text>\n                        <form method=\"post\">\n                            <input\n                                type=\"hidden\"\n                                name=\"_method\"\n                                value=\"delete\"\n                            />\n                            <Button\n                                colorScheme={'red'}\n                                type=\"submit\"\n                                bg={'red.400'}\n                                px={6}\n                                _hover={{\n                                    bg: 'red.500',\n                                }}>\n                                Delete selfInvoice\n                            </Button>\n                        </form>\n                    </Stack>\n                </Box>\n            </Center>\n        </div>\n    );\n}\n\nexport function CatchBoundary() {\n    const caught = useCatch();\n    const params = useParams();\n    switch (caught.status) {\n        case 404: {\n            return (\n                <div className=\"error-container\">\n                    Huh? What the heck is {params.selfInvoiceId}?\n                </div>\n            );\n        }\n        case 401: {\n            return (\n                <div className=\"error-container\">\n                    Sorry, but {params.selfInvoiceId} is not your selfInvoice.\n                </div>\n            );\n        }\n        default: {\n            throw new Error(`Unhandled error: ${caught.status}`);\n        }\n    }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n    console.error(error);\n    const { id } = useParams();\n    return (\n        <div className=\"error-container\">{`There was an error loading selfInvoice by the id ${id}. Sorry.`}</div>\n    );\n}\n", "import {\n    Box,\n    Center,\n    Heading,\n    Text,\n    Stack,\n    Avatar,\n    Image,\n    useColorModeValue, Button,\n} from '@chakra-ui/react';\nimport type {\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport type { Note } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\nexport default function NoteCard() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <Center py={6}>\n            <Box\n                maxW={'890px'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                p={6}\n                overflow={'hidden'}>\n                <Box\n                    h={'210px'}\n                    bg={'gray.100'}\n                    mt={-6}\n                    mx={-6}\n                    mb={6}\n                    pos={'relative'}>\n{/*                    <img\n                        src={\n                            'https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n                        }\n                    />*/}\n                </Box>\n                <Stack>\n                    <Heading\n                        whiteSpace={'pre-wrap'}\n                        color={useColorModeValue('gray.700', 'white')}\n                        fontSize={'2xl'}\n                        fontFamily={'body'}>\n                        {data.randomNote.name}\n                    </Heading>\n                    <Text color={'gray.500'} whiteSpace={'pre-wrap'}\n                    >\n                        {data.randomNote.content}\n                    </Text>\n                    <Text color={'gray.100'}\n                    >\n                        {data.randomNote.id}\n                    </Text>\n                </Stack>\n            </Box>\n        </Center>\n    );\n}\n", "import type {\n    LinksFunction,\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport invoiceStyles from \"~/styles/invoice.css\";\nimport {Box, Grid, Heading, Stack, Text, useColorModeValue} from \"@chakra-ui/react\";\nimport {json} from \"@remix-run/node\";\n\nexport const links: LinksFunction = () => {\n    return [\n        {\n            rel: \"stylesheet\",\n            href: invoiceStyles,\n        },\n    ];\n};\n\ntype LoaderData = {\n    selfInvoiceListItems: Array<{ id: string; contact: string }>;\n};\n\nexport const loader: LoaderFunction = async () => {\n    const data: LoaderData = {\n        selfInvoiceListItems: await db.selfInvoice.findMany({\n            take: 5,\n            select: { id: true, contact: true },\n            orderBy: { createdAt: \"desc\" },\n        }),\n    };\n    return json(data);\n};\n\nconst ColoredLine = () => (\n    <hr\n        style={{\n            color: 'red',\n            backgroundColor: 'red',\n            height: 5\n        }}\n    />\n);\n\nexport default function SelfInvoiceCard() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <Grid>\n            <Box\n                maxW={'auto'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                p={6}\n                overflow={'hidden'}>\n                <ul>\n                    {data.selfInvoiceListItems.map((invoice) => (\n                        <li key={invoice.id}>\n                            {invoice.id}\n                        </li>\n                    ))}\n                </ul>\n            </Box>\n        </Grid>\n    );\n}\n\n\n{/*            <div className=\"container mt-5 mb-5\">\n                <div className=\"d-flex justify-content-center row\">\n                    <div className=\"col-md-10\">\n                        <div className=\"receipt bg-white p-3 rounded\">\n                            <img src=\"https://i.imgur.com/zCAnG06.png\"\n                                 width=\"120\" />\n                            <h4 className=\"mt-2 mb-3\">Your order is confirmed!</h4>\n                            <h6 className=\"name\">Hello John,</h6><span className=\"fs-12 text-black-50\">your order has been confirmed and will be shipped in two days</span>\n                            <ColoredLine />\n                            <div className=\"d-flex flex-row justify-content-between align-items-center order-details\">\n                                <div><span className=\"d-block fs-12\">Order date</span><span\n                                    className=\"font-weight-bold\">12 March 2020</span></div>\n                                <div><span className=\"d-block fs-12\">Order number</span><span\n                                    className=\"font-weight-bold\">OD44434324</span></div>\n                                <div><span className=\"d-block fs-12\">Payment method</span><span\n                                    className=\"font-weight-bold\">Credit card</span><img className=\"ml-1 mb-1\"\n                                                                                        src=\"https://i.imgur.com/ZZr3Yqj.png\"\n                                                                                        width=\"20\" /></div>\n                                <div><span className=\"d-block fs-12\">Shipping Address</span><span\n                                    className=\"font-weight-bold text-success\">New Delhi</span></div>\n                            </div>\n                            <ColoredLine />\n                            <div className=\"d-flex justify-content-between align-items-center product-details\">\n                                <div className=\"d-flex flex-row product-name-image\"><img className=\"rounded\"\n                                                                                         src=\"https://i.imgur.com/GsFeDLn.jpg\"\n                                                                                         width=\"80\" />\n                                    <div className=\"d-flex flex-column justify-content-between ml-2\">\n                                        <div><span className=\"d-block font-weight-bold p-name\">Ralco formal shirts for men</span><span\n                                            className=\"fs-12\">Clothes</span></div>\n                                        <span className=\"fs-12\">Qty: 1pcs</span>\n                                    </div>\n                                </div>\n                                <div className=\"product-price\">\n                                    <h5>$70</h5>\n                                </div>\n                            </div>\n                            <div className=\"d-flex justify-content-between align-items-center product-details\">\n                                <div className=\"d-flex flex-row product-name-image\"><img className=\"rounded\"\n                                                                                         src=\"https://i.imgur.com/b7Ve3fJ.jpg\"\n                                                                                         width=\"80\" />\n                                    <div className=\"d-flex flex-column justify-content-between ml-2\">\n                                        <div><span className=\"d-block font-weight-bold p-name\">Ralco formal Belt for men</span><span\n                                            className=\"fs-12\">Accessories</span></div>\n                                        <span className=\"fs-12\">Qty: 1pcs</span>\n                                    </div>\n                                </div>\n                                <div className=\"product-price\">\n                                    <h6>$50</h6>\n                                </div>\n                            </div>\n                            <div className=\"mt-5 amount row\">\n                                <div className=\"d-flex justify-content-center col-md-6\"><img\n                                    src=\"https://i.imgur.com/AXdWCWr.gif\" width=\"250\" height=\"100\" /></div>\n                                <div className=\"col-md-6\">\n                                    <div className=\"billing\">\n                                        <div className=\"d-flex justify-content-between\"><span>Subtotal</span><span\n                                            className=\"font-weight-bold\">$120</span></div>\n                                        <div className=\"d-flex justify-content-between mt-2\">\n                                            <span>Shipping fee</span><span className=\"font-weight-bold\">$15</span>\n                                        </div>\n                                        <div className=\"d-flex justify-content-between mt-2\"><span>Tax</span><span\n                                            className=\"font-weight-bold\">$5</span></div>\n                                        <div className=\"d-flex justify-content-between mt-2\"><span\n                                            className=\"text-success\">Discount</span><span\n                                            className=\"font-weight-bold text-success\">$25</span></div>\n                                        <ColoredLine />\n                                        <div className=\"d-flex justify-content-between mt-1\"><span\n                                            className=\"font-weight-bold\">Total</span><span\n                                            className=\"font-weight-bold text-success\">$165</span></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <span className=\"d-block\">Expected delivery date</span><span\n                            className=\"font-weight-bold text-success\">12 March 2020</span><span\n                            className=\"d-block mt-3 text-black-50 fs-15\">We will be sending a shipping confirmation email when the item is shipped!</span>\n                            <ColoredLine />\n                            <div className=\"d-flex justify-content-between align-items-center footer\">\n                                <div className=\"thanks\"><span className=\"d-block font-weight-bold\">Thanks for shopping</span><span>Amazon team</span>\n                                </div>\n                                <div className=\"d-flex flex-column justify-content-end align-items-end\"><span\n                                    className=\"d-block font-weight-bold\">Need Help?</span><span>Call - 974493933</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>*/}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { db } from \"~/utils/db.server\";\nimport {json, redirect} from \"@remix-run/node\";\nimport {useActionData} from \"@remix-run/react\";\n\nexport function ErrorBoundary() {\n    return (\n        <div className=\"error-container\">\n            Something unexpected went wrong. Sorry about that.\n        </div>\n    );\n}\n\nfunction validateNumber(number: string) {\n    if (number.length < 2) {\n        return `That number is too short`;\n    }\n}\n\nfunction validateContact(contact: string) {\n    if (contact.length < 2) {\n        return `That contact is too short`;\n    }\n}\n\nfunction validateReason(reason: string) {\n    if (reason.length < 2) {\n        return `That note's number url is too short`;\n    }\n}\n\ntype ActionData = {\n    formError?: string;\n    fieldErrors?: {\n        contact: string | undefined;\n        number: string | undefined;\n        reason: string | undefined;\n    };\n    fields?: {\n        contact: string;\n        number: string;\n        reason: string;\n    };\n};\n\nconst badRequest = (data: ActionData) =>\n    json(data, { status: 400 });\n\nexport const action: ActionFunction = async ({\n                                                 request\n                                             }) => {\n    const form = await request.formData();\n    const contact = form.get(\"contact\");\n    const number = form.get(\"number\");\n    const reason = form.get(\"reason\");\n    if (\n        typeof contact !== \"string\" ||\n        typeof number !== \"string\" ||\n        typeof reason !== \"string\"\n    ) {\n        return badRequest({\n            formError: `Form not submitted correctly.`\n        });\n    }\n\n    const fieldErrors = {\n        contact: validateContact(contact),\n        number: validateNumber(number),\n        reason: validateReason(reason)\n    };\n    const fields = { contact, number, reason };\n    if (Object.values(fieldErrors).some(Boolean)) {\n        return badRequest({ fieldErrors, fields });\n    }\n\n    const selfInvoice = await db.selfInvoice.create({ data: fields });\n\n    return redirect(`/invoices/${selfInvoice.id}`);\n};\n\nexport default function NewSelfInvoiceRoute() {\n    const actionData = useActionData<ActionData>();\n\n    return (\n        <div className=\"main-container\">\n            <h3>Add your own note</h3>\n            <form method=\"post\">\n                <div>\n                    <label>\n                        Title:{\" \"}\n                        <input\n                            type=\"text\"\n                            defaultValue={actionData?.fields?.contact}\n                            name=\"contact\"\n                            aria-invalid={\n                                Boolean(actionData?.fieldErrors?.contact) ||\n                                undefined\n                            }\n                            aria-describedby={\n                                actionData?.fieldErrors?.contact\n                                    ? \"contact-error\"\n                                    : undefined\n                            }\n                        />\n                    </label>\n                    {actionData?.fieldErrors?.contact ? (\n                        <p\n                            className=\"form-validation-error\"\n                            role=\"alert\"\n                            id=\"contact-error\"\n                        >\n                            {actionData.fieldErrors.contact}\n                        </p>\n                    ) : null}\n                </div>\n                <div>\n                    <label>\n                        Reason:{\" \"}\n                        <textarea\n                            defaultValue={actionData?.fields?.reason}\n                            name=\"reason\"\n                            aria-invalid={\n                                Boolean(actionData?.fieldErrors?.reason) ||\n                                undefined\n                            }\n                            aria-describedby={\n                                actionData?.fieldErrors?.reason\n                                    ? \"reason-error\"\n                                    : undefined\n                            }\n                        />\n                    </label>\n                    {actionData?.fieldErrors?.reason ? (\n                        <p\n                            className=\"form-validation-error\"\n                            role=\"alert\"\n                            id=\"reason-error\"\n                        >\n                            {actionData.fieldErrors.reason}\n                        </p>\n                    ) : null}\n                </div>\n                <div>\n                    <label>\n                        Number:{\" \"}\n                        <input\n                            type=\"text\"\n                            defaultValue={actionData?.fields?.number}\n                            name=\"number\"\n                            aria-invalid={\n                                Boolean(actionData?.fieldErrors?.number) ||\n                                undefined\n                            }\n                            aria-describedby={\n                                actionData?.fieldErrors?.number\n                                    ? \"number-error\"\n                                    : undefined\n                            }\n                        />\n                    </label>\n                    {actionData?.fieldErrors?.number ? (\n                        <p\n                            className=\"form-validation-error\"\n                            role=\"alert\"\n                            id=\"number-error\"\n                        >\n                            {actionData.fieldErrors.number}\n                        </p>\n                    ) : null}\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"custom-btn btn-1\">\n                        Add\n                    </button>\n                </div>\n            </form>\n            {/*<NewNoteFormCard />*/}\n        </div>\n    );\n}\n\n\n", "import {Box} from \"@chakra-ui/react\";\nimport WithLargeQuote from \"~/components/WithLargeQuote\";\n\n\nexport default function Index() {\n    return (\n        <>\n            <WithLargeQuote />\n            <Box p={4}>\n            </Box></>\n    );\n}\n", "import { Avatar, Container, Button, Box, Stack, Text, useColorModeValue } from '@chakra-ui/react';\n\nexport default function WithLargeQuote() {\n    return (\n        <Container maxW={'3xl'}>\n        <Stack\n            bg={useColorModeValue('gray.50', 'gray.800')}\n            py={16}\n            px={8}\n            spacing={{ base: 8, md: 10 }}\n            align={'center'}\n            direction={'column'}>\n            <Text\n                whiteSpace={'pre-wrap'}\n                fontSize={{ base: 'xl', md: '2xl' }}\n                textAlign={'center'}\n                maxW={'3xl'}>\n                Hey I'm trying out Chakra UI! <br/>I'm using it to build a new webapp with Remix.run.\n            </Text>\n            <Box textAlign={'center'}>\n                <Avatar\n                    src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n\n                    // @ts-ignore\n                    alt='Zurab Baratashvili'\n                    mb={2}\n                />\n\n                <Text fontWeight={600}>Zurab Baratashvili</Text>\n            </Box>\n            <Button\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                    bg: 'blue.500',\n                }}\n                onClick={\n                    () => {\n                        window.open('./notes', '_blank', 'noopener');\n                    }\n                }>\n                Sign in\n            </Button>\n        </Stack>\n    </Container>\n    );\n}\n", "import {Box} from \"@chakra-ui/react\";\nimport {Outlet, useLoaderData} from \"@remix-run/react\";\nimport SidebarWithHeader from \"~/routes/notes/SidebarWithHeader\";\nimport type {Note} from \"@prisma/client\";\nimport type {LoaderFunction} from \"@remix-run/node\";\nimport {db} from \"~/utils/db.server\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\n\nexport default function NotesRoute() {\n    const data = useLoaderData<LoaderData>();\n  return (\n          <SidebarWithHeader>\n              <Box p={4}>\n                  <Outlet />\n              </Box>\n          </SidebarWithHeader>\n\n  );\n}\n", "import React, { ReactNode } from 'react';\nimport {\n    IconButton,\n    Avatar,\n    Box,\n    CloseButton,\n    Flex,\n    HStack,\n    VStack,\n    Icon,\n    useColorModeValue,\n    Link,\n    Drawer,\n    DrawerContent,\n    Text,\n    Image,\n    useDisclosure,\n    BoxProps,\n    FlexProps,\n    Menu,\n    MenuButton,\n    MenuDivider,\n    MenuItem,\n    MenuList, Button, useColorMode, Stack, Center,\n} from '@chakra-ui/react';\nimport {\n    FiHome,\n    FiTrendingUp,\n    FiCompass,\n    FiStar,\n    FiSettings,\n    FiMenu,\n    FiBell,\n    FiChevronDown,\n} from 'react-icons/fi';\nimport { IconType } from 'react-icons';\nimport { ReactText } from 'react';\nimport {MoonIcon, SunIcon} from \"@chakra-ui/icons\";\n\ninterface LinkItemProps {\n    name: string;\n    icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n    { name: 'Home', icon: FiHome },\n    { name: 'Trending', icon: FiTrendingUp },\n    { name: 'Explore', icon: FiCompass },\n    { name: 'Favourites', icon: FiStar },\n    { name: 'Settings', icon: FiSettings },\n];\n\nexport default function SidebarWithHeader({\n                                              children,\n                                          }: {\n    children: ReactNode;\n}) {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    return (\n        <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\n            <SidebarContent\n                onClose={() => onClose}\n                display={{ base: 'none', md: 'block' }}\n            />\n            <Drawer\n                autoFocus={false}\n                isOpen={isOpen}\n                placement=\"left\"\n                onClose={onClose}\n                returnFocusOnClose={false}\n                onOverlayClick={onClose}\n                size=\"full\">\n                <DrawerContent>\n                    <SidebarContent onClose={onClose} />\n                </DrawerContent>\n            </Drawer>\n            {/* mobilenav */}\n            <MobileNav onOpen={onOpen} />\n            <Box ml={{ base: 0, md: 60 }} p=\"4\">\n                {children}\n            </Box>\n        </Box>\n    );\n}\n\ninterface SidebarProps extends BoxProps {\n    onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n    return (\n        <Box\n            transition=\"3s ease\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderRight=\"1px\"\n            borderRightColor={useColorModeValue('gray.200', 'gray.700')}\n            w={{ base: 'full', md: 60 }}\n            pos=\"fixed\"\n            h=\"full\"\n            {...rest}>\n            <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n                <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\n            </Flex>\n            {LinkItems.map((link) => (\n                <NavItem key={link.name} icon={link.icon}>\n                    {link.name}\n                </NavItem>\n            ))}\n        </Box>\n    );\n};\n\ninterface NavItemProps extends FlexProps {\n    icon: IconType;\n    children: ReactText;\n}\nconst NavItem = ({ icon, children, ...rest }: NavItemProps) => {\n    return (\n        <Link href=\"#\" style={{ textDecoration: 'none' }} _focus={{ boxShadow: 'none' }}>\n            <Flex\n                align=\"center\"\n                p=\"4\"\n                mx=\"4\"\n                borderRadius=\"lg\"\n                role=\"group\"\n                cursor=\"pointer\"\n                _hover={{\n                    bg: 'cyan.400',\n                    color: 'white',\n                }}\n                {...rest}>\n                {icon && (\n                    <Icon\n                        mr=\"4\"\n                        fontSize=\"16\"\n                        _groupHover={{\n                            color: 'white',\n                        }}\n                        as={icon}\n                    />\n                )}\n                {children}\n            </Flex>\n        </Link>\n    );\n};\n\ninterface MobileProps extends FlexProps {\n    onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n    const { colorMode, toggleColorMode } = useColorMode();\n    return (\n        <Flex\n            ml={{ base: 0, md: 60 }}\n            px={{ base: 4, md: 4 }}\n            height=\"20\"\n            alignItems=\"center\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderBottomWidth=\"1px\"\n            borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\n            justifyContent={{ base: 'space-between', md: 'flex-end' }}\n            {...rest}>\n            <IconButton\n                display={{ base: 'flex', md: 'none' }}\n                onClick={onOpen}\n                variant=\"outline\"\n                aria-label=\"open menu\"\n                icon={<FiMenu />}\n            />\n\n            <Text\n                display={{ base: 'flex', md: 'none' }}\n                fontSize=\"2xl\"\n                fontFamily=\"monospace\"\n                fontWeight=\"bold\">\n                Logo\n            </Text>\n\n            <HStack spacing={{ base: '0', md: '6' }}>\n                <Button onClick={toggleColorMode}>\n                    {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n                </Button>\n                <IconButton\n                    size=\"lg\"\n                    variant=\"ghost\"\n                    aria-label=\"open menu\"\n                    icon={<FiBell />}\n                />\n                <Flex alignItems={'center'}>\n                    <Stack direction={'row'} spacing={7}>\n\n                        <Menu>\n                            <MenuButton\n                                as={Button}\n                                rounded={'full'}\n                                variant={'link'}\n                                cursor={'pointer'}\n                                minW={0}>\n                                <Avatar\n                                    size={'sm'}\n                                    src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                />\n                            </MenuButton>\n                            <MenuList alignItems={'center'}>\n                                <br />\n                                <Center>\n                                    <Avatar\n                                        size={'2xl'}\n                                        src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                    />\n                                </Center>\n                                <br />\n                                <Center>\n                                    <p>\u10D6\u10E3\u10E0\u10D0\u10D1</p>\n                                </Center>\n                                <br />\n                                <MenuDivider />\n                                <MenuItem>Your Servers</MenuItem>\n                                <MenuItem>Account Settings</MenuItem>\n                                <MenuItem>Logout</MenuItem>\n                            </MenuList>\n                        </Menu>\n                    </Stack>\n                </Flex>\n            </HStack>\n        </Flex>\n    );\n};\n", "import {\n    Flex,\n    Box,\n    FormControl,\n    FormLabel,\n    Input,\n    InputGroup,\n    HStack,\n    InputRightElement,\n    Stack,\n    Button,\n    Heading,\n    Text,\n    useColorModeValue,\n    Link,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nexport default function NewNoteFormCard() {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <Flex\n            minH={'100vh'}\n            align={'center'}\n            justify={'center'}\n            bg={useColorModeValue('gray.50', 'gray.800')}>\n            <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n                <Stack align={'center'}>\n                    <Heading fontSize={'4xl'} textAlign={'center'}>\n                        Add a new note\n                    </Heading>\n                    <Text fontSize={'lg'} color={'gray.600'}>\n                        feel free to contribute \u270C\uFE0F\n                    </Text>\n                </Stack>\n                <Box\n                    rounded={'lg'}\n                    bg={useColorModeValue('white', 'gray.700')}\n                    boxShadow={'lg'}\n                    p={8}>\n                    <Stack spacing={4}>\n                        <FormControl id=\"name\" isRequired>\n                            <FormLabel>Title:</FormLabel>\n                            <Input type=\"name\" />\n                        </FormControl>\n                        <FormControl id=\"content\" isRequired>\n                            <FormLabel>Content:</FormLabel>\n                            <Input type=\"content\" />\n                        </FormControl>\n                    </Stack>\n                    <Stack spacing={10} pt={2}>\n                        <Button\n                            loadingText=\"Submitting\"\n                            size=\"lg\"\n                            bg={'blue.400'}\n                            color={'white'}\n                            _hover={{\n                                bg: 'blue.500',\n                            }}>\n                            Add note\n                        </Button>\n                    </Stack>\n                </Box>\n            </Stack>\n        </Flex>\n    );\n}\n", "import {\n    Box,\n    Center,\n    Heading,\n    Text,\n    Stack,\n    Avatar,\n    Image,\n    useColorModeValue, Button,\n} from '@chakra-ui/react';\nimport type {\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport type { Note } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\nexport default function NoteCard() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <Center py={6}>\n            <Box\n                maxW={'890px'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                p={6}\n                overflow={'hidden'}>\n                <Box\n                    h={'210px'}\n                    bg={'gray.100'}\n                    mt={-6}\n                    mx={-6}\n                    mb={6}\n                    pos={'relative'}>\n{/*                    <img\n                        src={\n                            'https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n                        }\n                    />*/}\n                </Box>\n                <Stack>\n                    <Heading\n                        whiteSpace={'pre-wrap'}\n                        color={useColorModeValue('gray.700', 'white')}\n                        fontSize={'2xl'}\n                        fontFamily={'body'}>\n                        {data.randomNote.name}\n                    </Heading>\n                    <Text color={'gray.500'} whiteSpace={'pre-wrap'}\n                    >\n                        {data.randomNote.content}\n                    </Text>\n                    <Text color={'gray.100'}\n                    >\n                        {data.randomNote.id}\n                    </Text>\n                </Stack>\n            </Box>\n        </Center>\n    );\n}\n", "import type { Note } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\nimport {ActionFunction, LoaderFunction, redirect} from \"@remix-run/node\";\nimport {useCatch, useLoaderData, useParams} from \"@remix-run/react\";\nimport {Box, Center, Heading, Button, Stack, Text, Image, useColorModeValue} from \"@chakra-ui/react\";\n\ntype LoaderData = { note: Note };\n\nexport const action: ActionFunction = async ({\n                                                 request,\n                                                 params\n                                             }) => {\n    const form = await request.formData();\n    if (form.get(\"_method\") === \"delete\") {\n        const note = await db.note.findUnique({\n            where: { id: params.noteId }\n        });\n        if (!note) {\n            throw new Response(\n                \"Can't delete what does not exist\",\n                { status: 404 }\n            );\n        }\n        await db.note.delete({ where: { id: params.noteId } });\n        return redirect(\"/notes\");\n    }\n};\n\n\nexport const loader: LoaderFunction = async ({\n                                                 params\n                                             }) => {\n    const note = await db.note.findUnique({\n        where: { id: params.noteId }\n    });\n    if (!note) throw new Error(\"Note not found\");\n    const data: LoaderData = { note };\n    return data;\n};\n\nexport default function NoteRoute() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <div className=\"main-container\">\n            <Center py={6}>\n                <Box\n                    maxW={'1200px'}\n                    w={'full'}\n                    bg={useColorModeValue('white', 'gray.900')}\n                    boxShadow={'2xl'}\n                    rounded={'md'}\n                    p={6}\n                    overflow={'hidden'}>\n                        {data.note?.image && (\n                            <Image\n                                mb={6}\n                                w={'full'}\n                                maxH={'400px'}\n                                maxW={'1200px'}\n                                rounded={'md'}\n                                src={data.note?.image}\n                            />\n                        )}\n                    <Stack spacing={3}>\n                        <Heading\n                            whiteSpace={'pre-wrap'}\n                            color={useColorModeValue('gray.700', 'white')}\n                            fontSize={'2xl'}\n                            fontFamily={'body'}>\n                            {data.note.name}\n                        </Heading>\n                        <Text color={'gray.500'} whiteSpace={'pre-wrap'}\n                        >\n                            {data.note.content}\n                        </Text>\n                        <form method=\"post\">\n                            <input\n                                type=\"hidden\"\n                                name=\"_method\"\n                                value=\"delete\"\n                            />\n                            <Button\n                                colorScheme={'red'}\n                                type=\"submit\"\n                                bg={'red.400'}\n                                px={6}\n                                _hover={{\n                                    bg: 'red.500',\n                                }}>\n                                Delete note\n                            </Button>\n                        </form>\n                    </Stack>\n                </Box>\n            </Center>\n        </div>\n    );\n}\n\nexport function CatchBoundary() {\n    const caught = useCatch();\n    const params = useParams();\n    switch (caught.status) {\n        case 404: {\n            return (\n                <div className=\"error-container\">\n                    Huh? What the heck is {params.noteId}?\n                </div>\n            );\n        }\n        case 401: {\n            return (\n                <div className=\"error-container\">\n                    Sorry, but {params.noteId} is not your note.\n                </div>\n            );\n        }\n        default: {\n            throw new Error(`Unhandled error: ${caught.status}`);\n        }\n    }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n    console.error(error);\n    const { noteId } = useParams();\n    return (\n        <div className=\"error-container\">{`There was an error loading note by the id ${noteId}. Sorry.`}</div>\n    );\n}\n", "import { db } from \"~/utils/db.server\";\nimport { json } from \"@remix-run/node\";\nimport type {\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport NoteCard from \"~/routes/notes/NoteCard\";\nimport {Note} from \"@prisma/client\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\n\n\nexport default function NotesIndexRoute() {\n    return (\n        <div>\n            <NoteCard />\n        </div>\n    )\n}\n", "import {\n    Box,\n    Center,\n    Heading,\n    Text,\n    Stack,\n    Avatar,\n    Image,\n    useColorModeValue, Button,\n} from '@chakra-ui/react';\nimport type {\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport type { Note } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\nexport default function NoteCard() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <Center py={6}>\n            <Box\n                maxW={'890px'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                p={6}\n                overflow={'hidden'}>\n                <Box\n                    h={'210px'}\n                    bg={'gray.100'}\n                    mt={-6}\n                    mx={-6}\n                    mb={6}\n                    pos={'relative'}>\n{/*                    <img\n                        src={\n                            'https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n                        }\n                    />*/}\n                </Box>\n                <Stack>\n                    <Heading\n                        whiteSpace={'pre-wrap'}\n                        color={useColorModeValue('gray.700', 'white')}\n                        fontSize={'2xl'}\n                        fontFamily={'body'}>\n                        {data.randomNote.name}\n                    </Heading>\n                    <Text color={'gray.500'} whiteSpace={'pre-wrap'}\n                    >\n                        {data.randomNote.content}\n                    </Text>\n                    <Text color={'gray.100'}\n                    >\n                        {data.randomNote.id}\n                    </Text>\n                </Stack>\n            </Box>\n        </Center>\n    );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { db } from \"~/utils/db.server\";\nimport {json, redirect} from \"@remix-run/node\";\nimport {useActionData} from \"@remix-run/react\";\nimport NewNoteFormCard from \"~/routes/notes/NewNoteFormCard\";\n\nexport function ErrorBoundary() {\n    return (\n        <div className=\"error-container\">\n            Something unexpected went wrong. Sorry about that.\n        </div>\n    );\n}\n\nfunction validateNoteContent(content: string) {\n    if (content.length < 10) {\n        return `That note is too short`;\n    }\n}\n\nfunction validateNoteName(name: string) {\n    if (name.length < 2) {\n        return `That note's name is too short`;\n    }\n}\n\nfunction validateNoteImagee(image: string) {\n    if (image.length < 2) {\n        return `That note's image url is too short`;\n    }\n}\n\ntype ActionData = {\n    formError?: string;\n    fieldErrors?: {\n        name: string | undefined;\n        content: string | undefined;\n        image: string | undefined;\n    };\n    fields?: {\n        name: string;\n        content: string;\n        image: string;\n    };\n};\n\nconst badRequest = (data: ActionData) =>\n    json(data, { status: 400 });\n\nexport const action: ActionFunction = async ({\n                                                 request\n                                             }) => {\n    const form = await request.formData();\n    const name = form.get(\"name\");\n    const content = form.get(\"content\");\n    const image = form.get(\"image\");\n    if (\n        typeof name !== \"string\" ||\n        typeof content !== \"string\" ||\n        typeof image !== \"string\"\n    ) {\n        return badRequest({\n            formError: `Form not submitted correctly.`\n        });\n    }\n\n    const fieldErrors = {\n        name: validateNoteName(name),\n        content: validateNoteContent(content),\n        image: validateNoteImagee(image)\n    };\n    const fields = { name, content, image};\n    if (Object.values(fieldErrors).some(Boolean)) {\n        return badRequest({ fieldErrors, fields });\n    }\n\n    const note = await db.note.create({ data: fields });\n\n    return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNoteRoute() {\n    const actionData = useActionData<ActionData>();\n\n    return (\n        <div className=\"main-container\">\n            <h3>Add your own note</h3>\n            <form method=\"post\">\n                <div>\n                    <label>\n                        Title:{\" \"}\n                        <input\n                            type=\"text\"\n                            defaultValue={actionData?.fields?.name}\n                            name=\"name\"\n                            aria-invalid={\n                                Boolean(actionData?.fieldErrors?.name) ||\n                                undefined\n                            }\n                            aria-describedby={\n                                actionData?.fieldErrors?.name\n                                    ? \"name-error\"\n                                    : undefined\n                            }\n                        />\n                    </label>\n                    {actionData?.fieldErrors?.name ? (\n                        <p\n                            className=\"form-validation-error\"\n                            role=\"alert\"\n                            id=\"name-error\"\n                        >\n                            {actionData.fieldErrors.name}\n                        </p>\n                    ) : null}\n                </div>\n                <div>\n                    <label>\n                        Content:{\" \"}\n                        <textarea\n                            defaultValue={actionData?.fields?.content}\n                            name=\"content\"\n                            aria-invalid={\n                                Boolean(actionData?.fieldErrors?.content) ||\n                                undefined\n                            }\n                            aria-describedby={\n                                actionData?.fieldErrors?.content\n                                    ? \"content-error\"\n                                    : undefined\n                            }\n                        />\n                    </label>\n                    {actionData?.fieldErrors?.content ? (\n                        <p\n                            className=\"form-validation-error\"\n                            role=\"alert\"\n                            id=\"content-error\"\n                        >\n                            {actionData.fieldErrors.content}\n                        </p>\n                    ) : null}\n                </div>\n                <div>\n                    <label>\n                        Image URL:{\" \"}\n                        <input\n                            type=\"url\"\n                            defaultValue={actionData?.fields?.image}\n                            name=\"image\"\n                            aria-invalid={\n                                Boolean(actionData?.fieldErrors?.image) ||\n                                undefined\n                            }\n                            aria-describedby={\n                                actionData?.fieldErrors?.image\n                                    ? \"image-error\"\n                                    : undefined\n                            }\n                        />\n                    </label>\n                    {actionData?.fieldErrors?.image ? (\n                        <p\n                            className=\"form-validation-error\"\n                            role=\"alert\"\n                            id=\"image-error\"\n                        >\n                            {actionData.fieldErrors.image}\n                        </p>\n                    ) : null}\n                </div>\n                <div>\n                    <button type=\"submit\" className=\"custom-btn btn-1\">\n                        Add\n                    </button>\n                </div>\n            </form>\n            {/*<NewNoteFormCard />*/}\n        </div>\n    );\n}\n\n\n", "export default {'version':'9bbff0c0','entry':{'module':'/build/entry.client-7O2BFZNB.js','imports':['/build/_shared/chunk-2MVQ3TGC.js','/build/_shared/chunk-7WL2SFFR.js','/build/_shared/chunk-RHJHLA5B.js','/build/_shared/chunk-A32B2UD6.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-JOVIPQD2.js','imports':['/build/_shared/chunk-WUUKBI3R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-7QJBPUXK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/invoices':{'id':'routes/invoices','parentId':'root','path':'invoices','index':undefined,'caseSensitive':undefined,'module':'/build/routes/invoices-OVWJ64XX.js','imports':['/build/_shared/chunk-5E5JGWNP.js','/build/_shared/chunk-IY5SRO4D.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/invoices/$selfInvoiceId':{'id':'routes/invoices/$selfInvoiceId','parentId':'routes/invoices','path':':selfInvoiceId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/invoices/$selfInvoiceId-6XUEKRWP.js','imports':['/build/_shared/chunk-WUUKBI3R.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/invoices/NoteCard':{'id':'routes/invoices/NoteCard','parentId':'routes/invoices','path':'NoteCard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/invoices/NoteCard-W2JBCIDF.js','imports':['/build/_shared/chunk-WUUKBI3R.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/invoices/index':{'id':'routes/invoices/index','parentId':'routes/invoices','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/invoices/index-BHWWDMJG.js','imports':['/build/_shared/chunk-WUUKBI3R.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/invoices/new':{'id':'routes/invoices/new','parentId':'routes/invoices','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/invoices/new-BQ3AK2PZ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-6BZZZCOJ.js','imports':['/build/_shared/chunk-5E5JGWNP.js','/build/_shared/chunk-IY5SRO4D.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/$noteId-KDDQWERU.js','imports':['/build/_shared/chunk-WUUKBI3R.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/NewNoteFormCard':{'id':'routes/notes/NewNoteFormCard','parentId':'routes/notes','path':'NewNoteFormCard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/NewNoteFormCard-G3LCP6AJ.js','imports':['/build/_shared/chunk-WUUKBI3R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/NoteCard':{'id':'routes/notes/NoteCard','parentId':'routes/notes','path':'NoteCard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/NoteCard-Z6ZZ34YG.js','imports':['/build/_shared/chunk-FXGDDBSY.js','/build/_shared/chunk-WUUKBI3R.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/SidebarWithHeader':{'id':'routes/notes/SidebarWithHeader','parentId':'routes/notes','path':'SidebarWithHeader','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/SidebarWithHeader-X2NTBAKN.js','imports':['/build/_shared/chunk-WUUKBI3R.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/notes/index-5OGEAIBP.js','imports':['/build/_shared/chunk-FXGDDBSY.js','/build/_shared/chunk-WUUKBI3R.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/new-ZJIPWWF2.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true}},'url':'/build/manifest-9BBFF0C0.js'};", "\nimport * as entryServer from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/entry.server.tsx\";\nimport * as route0 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/root.tsx\";\nimport * as route1 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices.tsx\";\nimport * as route2 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/$selfInvoiceId.tsx\";\nimport * as route3 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/NoteCard.tsx\";\nimport * as route4 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/index.tsx\";\nimport * as route5 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/invoices/new.tsx\";\nimport * as route6 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/index.tsx\";\nimport * as route7 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes.tsx\";\nimport * as route8 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/SidebarWithHeader.tsx\";\nimport * as route9 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/NewNoteFormCard.tsx\";\nimport * as route10 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/NoteCard.tsx\";\nimport * as route11 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/$noteId.tsx\";\nimport * as route12 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/index.tsx\";\nimport * as route13 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/notes/new.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/invoices\": {\n      id: \"routes/invoices\",\n      parentId: \"root\",\n      path: \"invoices\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/invoices/$selfInvoiceId\": {\n      id: \"routes/invoices/$selfInvoiceId\",\n      parentId: \"routes/invoices\",\n      path: \":selfInvoiceId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/invoices/NoteCard\": {\n      id: \"routes/invoices/NoteCard\",\n      parentId: \"routes/invoices\",\n      path: \"NoteCard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/invoices/index\": {\n      id: \"routes/invoices/index\",\n      parentId: \"routes/invoices\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/invoices/new\": {\n      id: \"routes/invoices/new\",\n      parentId: \"routes/invoices\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes/SidebarWithHeader\": {\n      id: \"routes/notes/SidebarWithHeader\",\n      parentId: \"routes/notes\",\n      path: \"SidebarWithHeader\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/notes/NewNoteFormCard\": {\n      id: \"routes/notes/NewNoteFormCard\",\n      parentId: \"routes/notes\",\n      path: \"NewNoteFormCard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/notes/NoteCard\": {\n      id: \"routes/notes/NoteCard\",\n      parentId: \"routes/notes\",\n      path: \"NoteCard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAC/B,oBAA8B;AAC9B,6BAAgC;AAChC,oBAA4B;;;ACH5B,mBAAqC;AAQ9B,IAAM,qBAAqB,gCAA+C;AAM1E,IAAM,qBAAqB,gCAA6C;;;ACd/E,mBAAwB;AAET,8BAA8B;AACzC,SAAO,0BAAY,EAAE,KAAK;AAAA;;;AFMf,uBACX,SACA,oBACA,iBACA,cACF;AACA,QAAM,QAAQ;AACd,QAAM,EAAE,4BAA4B,oCAAoB;AAExD,QAAM,OAAO,kCACT,oCAAC,mBAAmB,UAApB;AAAA,IAA6B,OAAO;AAAA,KAClC,oCAAC,6BAAD;AAAA,IAAe,OAAO;AAAA,KACpB,oCAAC,2BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAKzD,QAAM,SAAS,wBAAwB;AAEvC,QAAM,SAAS,kCACX,oCAAC,mBAAmB,UAApB;AAAA,IAA6B,OAAO,OAAO;AAAA,KACzC,oCAAC,6BAAD;AAAA,IAAe,OAAO;AAAA,KACpB,oCAAC,2BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAKzD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,kBAAkB,UAAU;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AGxCb;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAA6C;AAC7C,oBAAiC;AACjC,oBAA+B;AAC/B,oBAOO;AAKA,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGL,IAAI,QAAuB,MAAM;AACtC,SAAO;AAAA,IACL,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B,EAAE,KAAK,cAAc,MAAM;AAAA,IAC3B;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AASZ,IAAM,WAAW,oCACb,CAAC,EAAE,YAA2B,iBAAiB;AAC7C,QAAM,kBAAkB,8BAAW;AACnC,QAAM,kBAAkB,8BAAW;AAGnC,+BAAU,MAAM;AAEd,iBAAa,MAAM,YAAY,SAAS;AAExC,UAAM,OAAO,aAAa,MAAM;AAChC,iBAAa,MAAM;AACnB,SAAK,QAAQ,CAAC,QAAQ;AACpB,MAAC,aAAa,MAAc,WAAW;AAAA;AAGzC,uDAAiB;AAAA,KAChB;AAEH,SACI,oDAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACX,oDAAC,QAAD,MACE,oDAAC,oBAAD,OACA,oDAAC,qBAAD,OACC,mDAAiB,IAAI,CAAC,EAAE,KAAK,KAAK,UAC/B,oDAAC,SAAD;AAAA,IACI;AAAA,IACA,gBAAc,GAAG,OAAO,IAAI,KAAK;AAAA,IACjC,yBAAyB,EAAE,QAAQ;AAAA,QAI7C,oDAAC,QAAD,MACC,UACD,oDAAC,iCAAD,OACA,oDAAC,uBAAD,OACA,oDAAC,0BAAD;AAAA;AAOK,eAAe;AAC1B,SACI,oDAAC,UAAD,MACI,oDAAC,8BAAD,MACI,oDAAC,sBAAD;AAAA;;;ACpFhB;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkB;AAClB,qBAAoC;;;ACDpC,oBAAiC;AACjC,oBAuBO;AACP,gBASO;AAGP,mBAAgC;AAMhC,IAAM,YAAkC;AAAA,EACpC,EAAE,MAAM,QAAQ,MAAM;AAAA,EACtB,EAAE,MAAM,YAAY,MAAM;AAAA,EAC1B,EAAE,MAAM,WAAW,MAAM;AAAA,EACzB,EAAE,MAAM,cAAc,MAAM;AAAA,EAC5B,EAAE,MAAM,YAAY,MAAM;AAAA;AAGf,2BAA2B;AAAA,EACI;AAAA,GAG3C;AACC,QAAM,EAAE,QAAQ,QAAQ,YAAY;AACpC,SACI,oDAAC,mBAAD;AAAA,IAAK,MAAK;AAAA,IAAQ,IAAI,qCAAkB,YAAY;AAAA,KAChD,oDAAC,gBAAD;AAAA,IACI,SAAS,MAAM;AAAA,IACf,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,MAEjC,oDAAC,sBAAD;AAAA,IACI,WAAW;AAAA,IACX;AAAA,IACA,WAAU;AAAA,IACV;AAAA,IACA,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,IAChB,MAAK;AAAA,KACL,oDAAC,6BAAD,MACI,oDAAC,gBAAD;AAAA,IAAgB;AAAA,QAIxB,oDAAC,WAAD;AAAA,IAAW;AAAA,MACX,oDAAC,mBAAD;AAAA,IAAK,IAAI,EAAE,MAAM,GAAG,IAAI;AAAA,IAAM,GAAE;AAAA,KAC3B;AAAA;AAUjB,IAAM,iBAAiB,CAAC,OAAuC;AAAvC,eAAE,cAAF,IAAc,iBAAd,IAAc,CAAZ;AACtB,SACI,oDAAC,mBAAD;AAAA,IACI,YAAW;AAAA,IACX,IAAI,qCAAkB,SAAS;AAAA,IAC/B,aAAY;AAAA,IACZ,kBAAkB,qCAAkB,YAAY;AAAA,IAChD,GAAG,EAAE,MAAM,QAAQ,IAAI;AAAA,IACvB,KAAI;AAAA,IACJ,GAAE;AAAA,KACE,OACJ,oDAAC,oBAAD;AAAA,IAAM,GAAE;AAAA,IAAK,YAAW;AAAA,IAAS,IAAG;AAAA,IAAI,gBAAe;AAAA,KACnD,oDAAC,2BAAD;AAAA,IAAa,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,IAAU,SAAS;AAAA,OAEhE,UAAU,IAAI,CAAC,SACZ,oDAAC,SAAD;AAAA,IAAS,KAAK,KAAK;AAAA,IAAM,MAAM,KAAK;AAAA,KAC/B,KAAK;AAAA;AAW1B,IAAM,UAAU,CAAC,OAA8C;AAA9C,eAAE,QAAM,aAAR,IAAqB,iBAArB,IAAqB,CAAnB,QAAM;AACrB,SACI,oDAAC,oBAAD;AAAA,IAAM,MAAK;AAAA,IAAI,OAAO,EAAE,gBAAgB;AAAA,IAAU,QAAQ,EAAE,WAAW;AAAA,KACnE,oDAAC,oBAAD;AAAA,IACI,OAAM;AAAA,IACN,GAAE;AAAA,IACF,IAAG;AAAA,IACH,cAAa;AAAA,IACb,MAAK;AAAA,IACL,QAAO;AAAA,IACP,QAAQ;AAAA,MACJ,IAAI;AAAA,MACJ,OAAO;AAAA;AAAA,KAEP,OACH,QACG,oDAAC,oBAAD;AAAA,IACI,IAAG;AAAA,IACH,UAAS;AAAA,IACT,aAAa;AAAA,MACT,OAAO;AAAA;AAAA,IAEX,IAAI;AAAA,MAGX;AAAA;AASjB,IAAM,YAAY,CAAC,OAAqC;AAArC,eAAE,aAAF,IAAa,iBAAb,IAAa,CAAX;AACjB,QAAM,EAAE,WAAW,oBAAoB;AACvC,SACI,oDAAC,oBAAD;AAAA,IACI,IAAI,EAAE,MAAM,GAAG,IAAI;AAAA,IACnB,IAAI,EAAE,MAAM,GAAG,IAAI;AAAA,IACnB,QAAO;AAAA,IACP,YAAW;AAAA,IACX,IAAI,qCAAkB,SAAS;AAAA,IAC/B,mBAAkB;AAAA,IAClB,mBAAmB,qCAAkB,YAAY;AAAA,IACjD,gBAAgB,EAAE,MAAM,iBAAiB,IAAI;AAAA,KACzC,OACJ,oDAAC,0BAAD;AAAA,IACI,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,IAC7B,SAAS;AAAA,IACT,SAAQ;AAAA,IACR,cAAW;AAAA,IACX,MAAM,oDAAC,kBAAD;AAAA,MAGV,oDAAC,oBAAD;AAAA,IACI,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,IAC7B,UAAS;AAAA,IACT,YAAW;AAAA,IACX,YAAW;AAAA,KAAO,SAItB,oDAAC,sBAAD;AAAA,IAAQ,SAAS,EAAE,MAAM,KAAK,IAAI;AAAA,KAC9B,oDAAC,sBAAD;AAAA,IAAQ,SAAS;AAAA,KACZ,cAAc,UAAU,oDAAC,uBAAD,QAAe,oDAAC,sBAAD,QAE5C,oDAAC,0BAAD;AAAA,IACI,MAAK;AAAA,IACL,SAAQ;AAAA,IACR,cAAW;AAAA,IACX,MAAM,oDAAC,kBAAD;AAAA,MAEV,oDAAC,oBAAD;AAAA,IAAM,YAAY;AAAA,KACd,oDAAC,qBAAD;AAAA,IAAO,WAAW;AAAA,IAAO,SAAS;AAAA,KAE9B,oDAAC,oBAAD,MACI,oDAAC,0BAAD;AAAA,IACI,IAAI;AAAA,IACJ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,MAAM;AAAA,KACN,oDAAC,sBAAD;AAAA,IACI,MAAM;AAAA,IACN,KAAK;AAAA,OAGb,oDAAC,wBAAD;AAAA,IAAU,YAAY;AAAA,KAClB,oDAAC,MAAD,OACA,oDAAC,sBAAD,MACI,oDAAC,sBAAD;AAAA,IACI,MAAM;AAAA,IACN,KAAK;AAAA,OAGb,oDAAC,MAAD,OACA,oDAAC,sBAAD,MACI,oDAAC,KAAD,MAAG,oCAEP,oDAAC,MAAD,OACA,oDAAC,2BAAD,OACA,oDAAC,wBAAD,MAAU,iBACV,oDAAC,wBAAD,MAAU,qBACV,oDAAC,wBAAD,MAAU;AAAA;;;AC3N1C,oBAA6B;AAE7B,IAAI;AASJ,IAAI,OAAuC;AACvC,OAAK,IAAI;AAAA,OACN;AACH,MAAI,CAAC,OAAO,MAAM;AACd,WAAO,OAAO,IAAI;AAAA;AAEtB,OAAK,OAAO;AAAA;;;AFRT,IAAM,SAAyB,YAAY;AAC9C,QAAM,QAAQ,MAAM,GAAG,KAAK;AAC5B,QAAM,kBAAkB,KAAK,MAAM,KAAK,WAAW;AACnD,QAAM,CAAC,cAAc,MAAM,GAAG,KAAK,SAAS;AAAA,IACxC,MAAM;AAAA,IACN,MAAM;AAAA;AAEV,QAAM,OAAmB,EAAE;AAC3B,SAAO;AAAA;AAII,yBAAyB;AACpC,QAAM,OAAO;AACb,SACI,oCAAC,mBAAD,MACI,oCAAC,oBAAD;AAAA,IAAK,GAAG;AAAA,KACJ,oCAAC,uBAAD;AAAA;;;AG1BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,kBAAuD;AACvD,qBAAiD;AACjD,qBAAkF;AAI3E,IAAM,SAAyB,OAAO;AAAA,EACI;AAAA,EACA;AAAA,MACE;AAC/C,QAAM,OAAO,MAAM,QAAQ;AAC3B,MAAI,KAAK,IAAI,eAAe,UAAU;AAClC,UAAM,cAAc,MAAM,GAAG,YAAY,WAAW;AAAA,MAChD,OAAO,EAAE,IAAI,OAAO;AAAA;AAExB,QAAI,CAAC,aAAa;AACd,YAAM,IAAI,SACN,oCACA,EAAE,QAAQ;AAAA;AAGlB,UAAM,GAAG,YAAY,OAAO,EAAE,OAAO,EAAE,IAAI,OAAO;AAClD,WAAO,0BAAS;AAAA;AAAA;AAKjB,IAAM,UAAyB,OAAO;AAAA,EACI;AAAA,MACE;AAC/C,QAAM,cAAc,MAAM,GAAG,YAAY,WAAW;AAAA,IAChD,OAAO,EAAE,IAAI,OAAO;AAAA;AAExB,MAAI,CAAC;AAAa,UAAM,IAAI,MAAM;AAClC,QAAM,OAAmB,EAAE;AAC3B,SAAO;AAAA;AAGI,4BAA4B;AACvC,QAAM,OAAO;AAEb,UAAQ,IAAI;AAEZ,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,uBAAD;AAAA,IAAQ,IAAI;AAAA,KACR,oCAAC,oBAAD;AAAA,IACI,MAAM;AAAA,IACN,GAAG;AAAA,IACH,IAAI,sCAAkB,SAAS;AAAA,IAC/B,WAAW;AAAA,IACX,SAAS;AAAA,IACT,GAAG;AAAA,IACH,UAAU;AAAA,KAWV,oCAAC,sBAAD;AAAA,IAAO,SAAS;AAAA,KACZ,oCAAC,wBAAD;AAAA,IACI,YAAY;AAAA,IACZ,OAAO,sCAAkB,YAAY;AAAA,IACrC,UAAU;AAAA,IACV,YAAY;AAAA,KACX,KAAK,YAAY,UAEtB,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,IAAY,YAAY;AAAA,KAEhC,KAAK,YAAY,SAEtB,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACT,oCAAC,SAAD;AAAA,IACI,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,MAEV,oCAAC,uBAAD;AAAA,IACI,aAAa;AAAA,IACb,MAAK;AAAA,IACL,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,QAAQ;AAAA,MACJ,IAAI;AAAA;AAAA,KACL;AAAA;AAW5B,yBAAyB;AAC5B,QAAM,SAAS;AACf,QAAM,SAAS;AACf,UAAQ,OAAO;AAAA,SACN,KAAK;AACN,aACI,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,0BACN,OAAO,eAAc;AAAA;AAAA,SAInD,KAAK;AACN,aACI,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,eACjB,OAAO,eAAc;AAAA;AAAA,aAIpC;AACL,YAAM,IAAI,MAAM,oBAAoB,OAAO;AAAA;AAAA;AAAA;AAKhD,uBAAuB,EAAE,SAA2B;AACvD,UAAQ,MAAM;AACd,QAAM,EAAE,OAAO;AACf,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAmB,oDAAoD;AAAA;;;AClI9F;AAAA;AAAA;AAAA;AAAA;AAAA,qBASO;AAIP,qBAA4B;AAMrB,IAAM,UAAyB,YAAY;AAC9C,QAAM,QAAQ,MAAM,GAAG,KAAK;AAC5B,QAAM,kBAAkB,KAAK,MAAM,KAAK,WAAW;AACnD,QAAM,CAAC,cAAc,MAAM,GAAG,KAAK,SAAS;AAAA,IACxC,MAAM;AAAA,IACN,MAAM;AAAA;AAEV,QAAM,OAAmB,EAAE;AAC3B,SAAO;AAAA;AAGI,oBAAoB;AAC/B,QAAM,OAAO;AAEb,SACI,oCAAC,uBAAD;AAAA,IAAQ,IAAI;AAAA,KACR,oCAAC,oBAAD;AAAA,IACI,MAAM;AAAA,IACN,GAAG;AAAA,IACH,IAAI,sCAAkB,SAAS;AAAA,IAC/B,WAAW;AAAA,IACX,SAAS;AAAA,IACT,GAAG;AAAA,IACH,UAAU;AAAA,KACV,oCAAC,oBAAD;AAAA,IACI,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,KAAK;AAAA,MAOT,oCAAC,sBAAD,MACI,oCAAC,wBAAD;AAAA,IACI,YAAY;AAAA,IACZ,OAAO,sCAAkB,YAAY;AAAA,IACrC,UAAU;AAAA,IACV,YAAY;AAAA,KACX,KAAK,WAAW,OAErB,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,IAAY,YAAY;AAAA,KAEhC,KAAK,WAAW,UAErB,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,KAER,KAAK,WAAW;AAAA;;;ACtEzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,qBAA4B;;;;;;AAG5B,qBAAiE;AACjE,mBAAmB;AAEZ,IAAM,SAAuB,MAAM;AACtC,SAAO;AAAA,IACH;AAAA,MACI,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AASX,IAAM,UAAyB,YAAY;AAC9C,QAAM,OAAmB;AAAA,IACrB,sBAAsB,MAAM,GAAG,YAAY,SAAS;AAAA,MAChD,MAAM;AAAA,MACN,QAAQ,EAAE,IAAI,MAAM,SAAS;AAAA,MAC7B,SAAS,EAAE,WAAW;AAAA;AAAA;AAG9B,SAAO,uBAAK;AAAA;AAaD,2BAA2B;AACtC,QAAM,OAAO;AAEb,SACI,oCAAC,qBAAD,MACI,oCAAC,oBAAD;AAAA,IACI,MAAM;AAAA,IACN,GAAG;AAAA,IACH,IAAI,sCAAkB,SAAS;AAAA,IAC/B,WAAW;AAAA,IACX,SAAS;AAAA,IACT,GAAG;AAAA,IACH,UAAU;AAAA,KACV,oCAAC,MAAD,MACK,KAAK,qBAAqB,IAAI,CAAC,YAC5B,oCAAC,MAAD;AAAA,IAAI,KAAK,QAAQ;AAAA,KACZ,QAAQ;AAAA;AAUrC;AAAA;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAA6B;AAC7B,qBAA4B;AAErB,0BAAyB;AAC5B,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAkB;AAAA;AAMzC,wBAAwB,QAAgB;AACpC,MAAI,OAAO,SAAS,GAAG;AACnB,WAAO;AAAA;AAAA;AAIf,yBAAyB,SAAiB;AACtC,MAAI,QAAQ,SAAS,GAAG;AACpB,WAAO;AAAA;AAAA;AAIf,wBAAwB,QAAgB;AACpC,MAAI,OAAO,SAAS,GAAG;AACnB,WAAO;AAAA;AAAA;AAkBf,IAAM,aAAa,CAAC,SAChB,uBAAK,MAAM,EAAE,QAAQ;AAElB,IAAM,UAAyB,OAAO;AAAA,EACI;AAAA,MACE;AAC/C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,SAAS,KAAK,IAAI;AACxB,QAAM,SAAS,KAAK,IAAI;AACxB,MACI,OAAO,YAAY,YACnB,OAAO,WAAW,YAClB,OAAO,WAAW,UACpB;AACE,WAAO,WAAW;AAAA,MACd,WAAW;AAAA;AAAA;AAInB,QAAM,cAAc;AAAA,IAChB,SAAS,gBAAgB;AAAA,IACzB,QAAQ,eAAe;AAAA,IACvB,QAAQ,eAAe;AAAA;AAE3B,QAAM,SAAS,EAAE,SAAS,QAAQ;AAClC,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC1C,WAAO,WAAW,EAAE,aAAa;AAAA;AAGrC,QAAM,cAAc,MAAM,GAAG,YAAY,OAAO,EAAE,MAAM;AAExD,SAAO,2BAAS,aAAa,YAAY;AAAA;AAG9B,+BAA+B;AAhF9C;AAiFI,QAAM,aAAa;AAEnB,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD,MAAI,sBACJ,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACT,oCAAC,OAAD,MACI,oCAAC,SAAD,MAAO,UACI,KACP,oCAAC,SAAD;AAAA,IACI,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACI,QAAQ,+CAAY,gBAAZ,mBAAyB,YACjC;AAAA,IAEJ,oBACI,gDAAY,gBAAZ,mBAAyB,WACnB,kBACA;AAAA,OAIjB,gDAAY,gBAAZ,mBAAyB,WACtB,oCAAC,KAAD;AAAA,IACI,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,WAE5B,OAER,oCAAC,OAAD,MACI,oCAAC,SAAD,MAAO,WACK,KACR,oCAAC,YAAD;AAAA,IACI,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACI,QAAQ,+CAAY,gBAAZ,mBAAyB,WACjC;AAAA,IAEJ,oBACI,gDAAY,gBAAZ,mBAAyB,UACnB,iBACA;AAAA,OAIjB,gDAAY,gBAAZ,mBAAyB,UACtB,oCAAC,KAAD;AAAA,IACI,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,UAE5B,OAER,oCAAC,OAAD,MACI,oCAAC,SAAD,MAAO,WACK,KACR,oCAAC,SAAD;AAAA,IACI,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACI,QAAQ,+CAAY,gBAAZ,mBAAyB,WACjC;AAAA,IAEJ,oBACI,gDAAY,gBAAZ,mBAAyB,UACnB,iBACA;AAAA,OAIjB,gDAAY,gBAAZ,mBAAyB,UACtB,oCAAC,KAAD;AAAA,IACI,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,UAE5B,OAER,oCAAC,OAAD,MACI,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAmB;AAAA;;;AC3KvE;AAAA;AAAA;AAAA;AAAA,qBAAkB;;;ACAlB,qBAA+E;AAEhE,0BAA0B;AACrC,SACI,oCAAC,0BAAD;AAAA,IAAW,MAAM;AAAA,KACjB,oCAAC,sBAAD;AAAA,IACI,IAAI,sCAAkB,WAAW;AAAA,IACjC,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,SAAS,EAAE,MAAM,GAAG,IAAI;AAAA,IACxB,OAAO;AAAA,IACP,WAAW;AAAA,KACX,oCAAC,qBAAD;AAAA,IACI,YAAY;AAAA,IACZ,UAAU,EAAE,MAAM,MAAM,IAAI;AAAA,IAC5B,WAAW;AAAA,IACX,MAAM;AAAA,KAAO,kCACiB,oCAAC,MAAD,OAAK,uDAEvC,oCAAC,oBAAD;AAAA,IAAK,WAAW;AAAA,KACZ,oCAAC,uBAAD;AAAA,IACI,KAAK;AAAA,IAGL,KAAI;AAAA,IACJ,IAAI;AAAA,MAGR,oCAAC,qBAAD;AAAA,IAAM,YAAY;AAAA,KAAK,wBAE3B,oCAAC,uBAAD;AAAA,IACI,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ;AAAA,MACJ,IAAI;AAAA;AAAA,IAER,SACI,MAAM;AACF,aAAO,KAAK,WAAW,UAAU;AAAA;AAAA,KAEvC;AAAA;;;ADpCH,iBAAiB;AAC5B,SACI,0DACI,oCAAC,gBAAD,OACA,oCAAC,oBAAD;AAAA,IAAK,GAAG;AAAA;AAAA;;;AERpB;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkB;AAClB,qBAAoC;AAQ7B,IAAM,UAAyB,YAAY;AAC9C,QAAM,QAAQ,MAAM,GAAG,KAAK;AAC5B,QAAM,kBAAkB,KAAK,MAAM,KAAK,WAAW;AACnD,QAAM,CAAC,cAAc,MAAM,GAAG,KAAK,SAAS;AAAA,IACxC,MAAM;AAAA,IACN,MAAM;AAAA;AAEV,QAAM,OAAmB,EAAE;AAC3B,SAAO;AAAA;AAII,sBAAsB;AACjC,QAAM,OAAO;AACf,SACQ,oCAAC,mBAAD,MACI,oCAAC,oBAAD;AAAA,IAAK,GAAG;AAAA,KACJ,oCAAC,uBAAD;AAAA;;;AC1BlB;AAAA;AAAA;AAAA;AAAA,qBAAiC;AACjC,qBAuBO;AACP,iBASO;AAGP,oBAAgC;AAMhC,IAAM,aAAkC;AAAA,EACpC,EAAE,MAAM,QAAQ,MAAM;AAAA,EACtB,EAAE,MAAM,YAAY,MAAM;AAAA,EAC1B,EAAE,MAAM,WAAW,MAAM;AAAA,EACzB,EAAE,MAAM,cAAc,MAAM;AAAA,EAC5B,EAAE,MAAM,YAAY,MAAM;AAAA;AAGf,4BAA2B;AAAA,EACI;AAAA,GAG3C;AACC,QAAM,EAAE,QAAQ,QAAQ,YAAY;AACpC,SACI,qDAAC,oBAAD;AAAA,IAAK,MAAK;AAAA,IAAQ,IAAI,sCAAkB,YAAY;AAAA,KAChD,qDAAC,iBAAD;AAAA,IACI,SAAS,MAAM;AAAA,IACf,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,MAEjC,qDAAC,uBAAD;AAAA,IACI,WAAW;AAAA,IACX;AAAA,IACA,WAAU;AAAA,IACV;AAAA,IACA,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,IAChB,MAAK;AAAA,KACL,qDAAC,8BAAD,MACI,qDAAC,iBAAD;AAAA,IAAgB;AAAA,QAIxB,qDAAC,YAAD;AAAA,IAAW;AAAA,MACX,qDAAC,oBAAD;AAAA,IAAK,IAAI,EAAE,MAAM,GAAG,IAAI;AAAA,IAAM,GAAE;AAAA,KAC3B;AAAA;AAUjB,IAAM,kBAAiB,CAAC,OAAuC;AAAvC,eAAE,cAAF,IAAc,iBAAd,IAAc,CAAZ;AACtB,SACI,qDAAC,oBAAD;AAAA,IACI,YAAW;AAAA,IACX,IAAI,sCAAkB,SAAS;AAAA,IAC/B,aAAY;AAAA,IACZ,kBAAkB,sCAAkB,YAAY;AAAA,IAChD,GAAG,EAAE,MAAM,QAAQ,IAAI;AAAA,IACvB,KAAI;AAAA,IACJ,GAAE;AAAA,KACE,OACJ,qDAAC,qBAAD;AAAA,IAAM,GAAE;AAAA,IAAK,YAAW;AAAA,IAAS,IAAG;AAAA,IAAI,gBAAe;AAAA,KACnD,qDAAC,4BAAD;AAAA,IAAa,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,IAAU,SAAS;AAAA,OAEhE,WAAU,IAAI,CAAC,SACZ,qDAAC,UAAD;AAAA,IAAS,KAAK,KAAK;AAAA,IAAM,MAAM,KAAK;AAAA,KAC/B,KAAK;AAAA;AAW1B,IAAM,WAAU,CAAC,OAA8C;AAA9C,eAAE,QAAM,aAAR,IAAqB,iBAArB,IAAqB,CAAnB,QAAM;AACrB,SACI,qDAAC,qBAAD;AAAA,IAAM,MAAK;AAAA,IAAI,OAAO,EAAE,gBAAgB;AAAA,IAAU,QAAQ,EAAE,WAAW;AAAA,KACnE,qDAAC,qBAAD;AAAA,IACI,OAAM;AAAA,IACN,GAAE;AAAA,IACF,IAAG;AAAA,IACH,cAAa;AAAA,IACb,MAAK;AAAA,IACL,QAAO;AAAA,IACP,QAAQ;AAAA,MACJ,IAAI;AAAA,MACJ,OAAO;AAAA;AAAA,KAEP,OACH,QACG,qDAAC,qBAAD;AAAA,IACI,IAAG;AAAA,IACH,UAAS;AAAA,IACT,aAAa;AAAA,MACT,OAAO;AAAA;AAAA,IAEX,IAAI;AAAA,MAGX;AAAA;AASjB,IAAM,aAAY,CAAC,OAAqC;AAArC,eAAE,aAAF,IAAa,iBAAb,IAAa,CAAX;AACjB,QAAM,EAAE,WAAW,oBAAoB;AACvC,SACI,qDAAC,qBAAD;AAAA,IACI,IAAI,EAAE,MAAM,GAAG,IAAI;AAAA,IACnB,IAAI,EAAE,MAAM,GAAG,IAAI;AAAA,IACnB,QAAO;AAAA,IACP,YAAW;AAAA,IACX,IAAI,sCAAkB,SAAS;AAAA,IAC/B,mBAAkB;AAAA,IAClB,mBAAmB,sCAAkB,YAAY;AAAA,IACjD,gBAAgB,EAAE,MAAM,iBAAiB,IAAI;AAAA,KACzC,OACJ,qDAAC,2BAAD;AAAA,IACI,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,IAC7B,SAAS;AAAA,IACT,SAAQ;AAAA,IACR,cAAW;AAAA,IACX,MAAM,qDAAC,mBAAD;AAAA,MAGV,qDAAC,qBAAD;AAAA,IACI,SAAS,EAAE,MAAM,QAAQ,IAAI;AAAA,IAC7B,UAAS;AAAA,IACT,YAAW;AAAA,IACX,YAAW;AAAA,KAAO,SAItB,qDAAC,uBAAD;AAAA,IAAQ,SAAS,EAAE,MAAM,KAAK,IAAI;AAAA,KAC9B,qDAAC,uBAAD;AAAA,IAAQ,SAAS;AAAA,KACZ,cAAc,UAAU,qDAAC,wBAAD,QAAe,qDAAC,uBAAD,QAE5C,qDAAC,2BAAD;AAAA,IACI,MAAK;AAAA,IACL,SAAQ;AAAA,IACR,cAAW;AAAA,IACX,MAAM,qDAAC,mBAAD;AAAA,MAEV,qDAAC,qBAAD;AAAA,IAAM,YAAY;AAAA,KACd,qDAAC,sBAAD;AAAA,IAAO,WAAW;AAAA,IAAO,SAAS;AAAA,KAE9B,qDAAC,qBAAD,MACI,qDAAC,2BAAD;AAAA,IACI,IAAI;AAAA,IACJ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,MAAM;AAAA,KACN,qDAAC,uBAAD;AAAA,IACI,MAAM;AAAA,IACN,KAAK;AAAA,OAGb,qDAAC,yBAAD;AAAA,IAAU,YAAY;AAAA,KAClB,qDAAC,MAAD,OACA,qDAAC,uBAAD,MACI,qDAAC,uBAAD;AAAA,IACI,MAAM;AAAA,IACN,KAAK;AAAA,OAGb,qDAAC,MAAD,OACA,qDAAC,uBAAD,MACI,qDAAC,KAAD,MAAG,oCAEP,qDAAC,MAAD,OACA,qDAAC,4BAAD,OACA,qDAAC,yBAAD,MAAU,iBACV,qDAAC,yBAAD,MAAU,qBACV,qDAAC,yBAAD,MAAU;AAAA;;;AC3N1C;AAAA;AAAA;AAAA;AAAA,qBAeO;AACP,qBAAyB;AAGV,2BAA2B;AACtC,QAAM,CAAC,cAAc,mBAAmB,6BAAS;AAEjD,SACI,oCAAC,qBAAD;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,IAAI,sCAAkB,WAAW;AAAA,KACjC,oCAAC,sBAAD;AAAA,IAAO,SAAS;AAAA,IAAG,IAAI;AAAA,IAAQ,MAAM;AAAA,IAAM,IAAI;AAAA,IAAI,IAAI;AAAA,KACnD,oCAAC,sBAAD;AAAA,IAAO,OAAO;AAAA,KACV,oCAAC,wBAAD;AAAA,IAAS,UAAU;AAAA,IAAO,WAAW;AAAA,KAAU,mBAG/C,oCAAC,qBAAD;AAAA,IAAM,UAAU;AAAA,IAAM,OAAO;AAAA,KAAY,0CAI7C,oCAAC,oBAAD;AAAA,IACI,SAAS;AAAA,IACT,IAAI,sCAAkB,SAAS;AAAA,IAC/B,WAAW;AAAA,IACX,GAAG;AAAA,KACH,oCAAC,sBAAD;AAAA,IAAO,SAAS;AAAA,KACZ,oCAAC,4BAAD;AAAA,IAAa,IAAG;AAAA,IAAO,YAAU;AAAA,KAC7B,oCAAC,0BAAD,MAAW,WACX,oCAAC,sBAAD;AAAA,IAAO,MAAK;AAAA,OAEhB,oCAAC,4BAAD;AAAA,IAAa,IAAG;AAAA,IAAU,YAAU;AAAA,KAChC,oCAAC,0BAAD,MAAW,aACX,oCAAC,sBAAD;AAAA,IAAO,MAAK;AAAA,QAGpB,oCAAC,sBAAD;AAAA,IAAO,SAAS;AAAA,IAAI,IAAI;AAAA,KACpB,oCAAC,uBAAD;AAAA,IACI,aAAY;AAAA,IACZ,MAAK;AAAA,IACL,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ;AAAA,MACJ,IAAI;AAAA;AAAA,KACL;AAAA;;;AC5D/B;AAAA;AAAA;AAAA;AAAA;AAAA,qBASO;AAIP,qBAA4B;AAMrB,IAAM,UAAyB,YAAY;AAC9C,QAAM,QAAQ,MAAM,GAAG,KAAK;AAC5B,QAAM,kBAAkB,KAAK,MAAM,KAAK,WAAW;AACnD,QAAM,CAAC,cAAc,MAAM,GAAG,KAAK,SAAS;AAAA,IACxC,MAAM;AAAA,IACN,MAAM;AAAA;AAEV,QAAM,OAAmB,EAAE;AAC3B,SAAO;AAAA;AAGI,qBAAoB;AAC/B,QAAM,OAAO;AAEb,SACI,oCAAC,uBAAD;AAAA,IAAQ,IAAI;AAAA,KACR,oCAAC,oBAAD;AAAA,IACI,MAAM;AAAA,IACN,GAAG;AAAA,IACH,IAAI,sCAAkB,SAAS;AAAA,IAC/B,WAAW;AAAA,IACX,SAAS;AAAA,IACT,GAAG;AAAA,IACH,UAAU;AAAA,KACV,oCAAC,oBAAD;AAAA,IACI,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,KAAK;AAAA,MAOT,oCAAC,sBAAD,MACI,oCAAC,wBAAD;AAAA,IACI,YAAY;AAAA,IACZ,OAAO,sCAAkB,YAAY;AAAA,IACrC,UAAU;AAAA,IACV,YAAY;AAAA,KACX,KAAK,WAAW,OAErB,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,IAAY,YAAY;AAAA,KAEhC,KAAK,WAAW,UAErB,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,KAER,KAAK,WAAW;AAAA;;;ACtEzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAAuD;AACvD,qBAAiD;AACjD,qBAAkF;AAI3E,IAAM,UAAyB,OAAO;AAAA,EACI;AAAA,EACA;AAAA,MACE;AAC/C,QAAM,OAAO,MAAM,QAAQ;AAC3B,MAAI,KAAK,IAAI,eAAe,UAAU;AAClC,UAAM,OAAO,MAAM,GAAG,KAAK,WAAW;AAAA,MAClC,OAAO,EAAE,IAAI,OAAO;AAAA;AAExB,QAAI,CAAC,MAAM;AACP,YAAM,IAAI,SACN,oCACA,EAAE,QAAQ;AAAA;AAGlB,UAAM,GAAG,KAAK,OAAO,EAAE,OAAO,EAAE,IAAI,OAAO;AAC3C,WAAO,2BAAS;AAAA;AAAA;AAKjB,IAAM,UAAyB,OAAO;AAAA,EACI;AAAA,MACE;AAC/C,QAAM,OAAO,MAAM,GAAG,KAAK,WAAW;AAAA,IAClC,OAAO,EAAE,IAAI,OAAO;AAAA;AAExB,MAAI,CAAC;AAAM,UAAM,IAAI,MAAM;AAC3B,QAAM,OAAmB,EAAE;AAC3B,SAAO;AAAA;AAGI,qBAAqB;AAxCpC;AAyCI,QAAM,OAAO;AAEb,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,uBAAD;AAAA,IAAQ,IAAI;AAAA,KACR,oCAAC,oBAAD;AAAA,IACI,MAAM;AAAA,IACN,GAAG;AAAA,IACH,IAAI,sCAAkB,SAAS;AAAA,IAC/B,WAAW;AAAA,IACX,SAAS;AAAA,IACT,GAAG;AAAA,IACH,UAAU;AAAA,KACL,YAAK,SAAL,mBAAW,UACR,oCAAC,sBAAD;AAAA,IACI,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,KAAK,WAAK,SAAL,mBAAW;AAAA,MAG5B,oCAAC,sBAAD;AAAA,IAAO,SAAS;AAAA,KACZ,oCAAC,wBAAD;AAAA,IACI,YAAY;AAAA,IACZ,OAAO,sCAAkB,YAAY;AAAA,IACrC,UAAU;AAAA,IACV,YAAY;AAAA,KACX,KAAK,KAAK,OAEf,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,IAAY,YAAY;AAAA,KAEhC,KAAK,KAAK,UAEf,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACT,oCAAC,SAAD;AAAA,IACI,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,MAEV,oCAAC,uBAAD;AAAA,IACI,aAAa;AAAA,IACb,MAAK;AAAA,IACL,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,QAAQ;AAAA,MACJ,IAAI;AAAA;AAAA,KACL;AAAA;AAW5B,0BAAyB;AAC5B,QAAM,SAAS;AACf,QAAM,SAAS;AACf,UAAQ,OAAO;AAAA,SACN,KAAK;AACN,aACI,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,0BACN,OAAO,QAAO;AAAA;AAAA,SAI5C,KAAK;AACN,aACI,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,eACjB,OAAO,QAAO;AAAA;AAAA,aAI7B;AACL,YAAM,IAAI,MAAM,oBAAoB,OAAO;AAAA;AAAA;AAAA;AAKhD,wBAAuB,EAAE,SAA2B;AACvD,UAAQ,MAAM;AACd,QAAM,EAAE,WAAW;AACnB,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAmB,6CAA6C;AAAA;;;AChIvF;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBASO;AAIP,qBAA4B;AAiBb,qBAAoB;AAC/B,QAAM,OAAO;AAEb,SACI,oCAAC,uBAAD;AAAA,IAAQ,IAAI;AAAA,KACR,oCAAC,oBAAD;AAAA,IACI,MAAM;AAAA,IACN,GAAG;AAAA,IACH,IAAI,sCAAkB,SAAS;AAAA,IAC/B,WAAW;AAAA,IACX,SAAS;AAAA,IACT,GAAG;AAAA,IACH,UAAU;AAAA,KACV,oCAAC,oBAAD;AAAA,IACI,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,KAAK;AAAA,MAOT,oCAAC,sBAAD,MACI,oCAAC,wBAAD;AAAA,IACI,YAAY;AAAA,IACZ,OAAO,sCAAkB,YAAY;AAAA,IACrC,UAAU;AAAA,IACV,YAAY;AAAA,KACX,KAAK,WAAW,OAErB,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,IAAY,YAAY;AAAA,KAEhC,KAAK,WAAW,UAErB,oCAAC,qBAAD;AAAA,IAAM,OAAO;AAAA,KAER,KAAK,WAAW;AAAA;;;AD3DlC,IAAM,UAAyB,YAAY;AAC9C,QAAM,QAAQ,MAAM,GAAG,KAAK;AAC5B,QAAM,kBAAkB,KAAK,MAAM,KAAK,WAAW;AACnD,QAAM,CAAC,cAAc,MAAM,GAAG,KAAK,SAAS;AAAA,IACxC,MAAM;AAAA,IACN,MAAM;AAAA;AAEV,QAAM,OAAmB,EAAE;AAC3B,SAAO;AAAA;AAKI,2BAA2B;AACtC,SACI,oCAAC,OAAD,MACI,oCAAC,WAAD;AAAA;;;AE3BZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,mBAA6B;AAC7B,qBAA4B;AAGrB,0BAAyB;AAC5B,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAkB;AAAA;AAMzC,6BAA6B,SAAiB;AAC1C,MAAI,QAAQ,SAAS,IAAI;AACrB,WAAO;AAAA;AAAA;AAIf,0BAA0B,MAAc;AACpC,MAAI,KAAK,SAAS,GAAG;AACjB,WAAO;AAAA;AAAA;AAIf,4BAA4B,OAAe;AACvC,MAAI,MAAM,SAAS,GAAG;AAClB,WAAO;AAAA;AAAA;AAkBf,IAAM,cAAa,CAAC,SAChB,uBAAK,MAAM,EAAE,QAAQ;AAElB,IAAM,UAAyB,OAAO;AAAA,EACI;AAAA,MACE;AAC/C,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,OAAO,KAAK,IAAI;AACtB,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,QAAQ,KAAK,IAAI;AACvB,MACI,OAAO,SAAS,YAChB,OAAO,YAAY,YACnB,OAAO,UAAU,UACnB;AACE,WAAO,YAAW;AAAA,MACd,WAAW;AAAA;AAAA;AAInB,QAAM,cAAc;AAAA,IAChB,MAAM,iBAAiB;AAAA,IACvB,SAAS,oBAAoB;AAAA,IAC7B,OAAO,mBAAmB;AAAA;AAE9B,QAAM,SAAS,EAAE,MAAM,SAAS;AAChC,MAAI,OAAO,OAAO,aAAa,KAAK,UAAU;AAC1C,WAAO,YAAW,EAAE,aAAa;AAAA;AAGrC,QAAM,OAAO,MAAM,GAAG,KAAK,OAAO,EAAE,MAAM;AAE1C,SAAO,2BAAS,UAAU,KAAK;AAAA;AAGpB,wBAAwB;AAjFvC;AAkFI,QAAM,aAAa;AAEnB,SACI,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACX,oCAAC,MAAD,MAAI,sBACJ,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACT,oCAAC,OAAD,MACI,oCAAC,SAAD,MAAO,UACI,KACP,oCAAC,SAAD;AAAA,IACI,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACI,QAAQ,+CAAY,gBAAZ,mBAAyB,SACjC;AAAA,IAEJ,oBACI,gDAAY,gBAAZ,mBAAyB,QACnB,eACA;AAAA,OAIjB,gDAAY,gBAAZ,mBAAyB,QACtB,oCAAC,KAAD;AAAA,IACI,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,QAE5B,OAER,oCAAC,OAAD,MACI,oCAAC,SAAD,MAAO,YACM,KACT,oCAAC,YAAD;AAAA,IACI,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACI,QAAQ,+CAAY,gBAAZ,mBAAyB,YACjC;AAAA,IAEJ,oBACI,gDAAY,gBAAZ,mBAAyB,WACnB,kBACA;AAAA,OAIjB,gDAAY,gBAAZ,mBAAyB,WACtB,oCAAC,KAAD;AAAA,IACI,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,WAE5B,OAER,oCAAC,OAAD,MACI,oCAAC,SAAD,MAAO,cACQ,KACX,oCAAC,SAAD;AAAA,IACI,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACI,QAAQ,+CAAY,gBAAZ,mBAAyB,UACjC;AAAA,IAEJ,oBACI,gDAAY,gBAAZ,mBAAyB,SACnB,gBACA;AAAA,OAIjB,gDAAY,gBAAZ,mBAAyB,SACtB,oCAAC,KAAD;AAAA,IACI,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,SAE5B,OAER,oCAAC,OAAD,MACI,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAmB;AAAA;;;AC5KvE,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,mBAAkB,EAAC,MAAK,mBAAkB,YAAW,QAAO,QAAO,YAAW,SAAQ,QAAU,iBAAgB,QAAU,UAAS,sCAAqC,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,kCAAiC,EAAC,MAAK,kCAAiC,YAAW,mBAAkB,QAAO,kBAAiB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,qDAAoD,WAAU,CAAC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,MAAK,oBAAmB,QAAM,4BAA2B,EAAC,MAAK,4BAA2B,YAAW,mBAAkB,QAAO,YAAW,SAAQ,QAAU,iBAAgB,QAAU,UAAS,+CAA8C,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,yBAAwB,EAAC,MAAK,yBAAwB,YAAW,mBAAkB,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,4CAA2C,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,uBAAsB,EAAC,MAAK,uBAAsB,YAAW,mBAAkB,QAAO,OAAM,SAAQ,QAAU,iBAAgB,QAAU,UAAS,0CAAyC,WAAU,QAAU,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,QAAM,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,wBAAuB,EAAC,MAAK,wBAAuB,YAAW,gBAAe,QAAO,WAAU,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2CAA0C,WAAU,CAAC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,MAAK,oBAAmB,QAAM,gCAA+B,EAAC,MAAK,gCAA+B,YAAW,gBAAe,QAAO,mBAAkB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mDAAkD,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,yBAAwB,EAAC,MAAK,yBAAwB,YAAW,gBAAe,QAAO,YAAW,SAAQ,QAAU,iBAAgB,QAAU,UAAS,4CAA2C,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,kCAAiC,EAAC,MAAK,kCAAiC,YAAW,gBAAe,QAAO,qBAAoB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,qDAAoD,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,sBAAqB,EAAC,MAAK,sBAAqB,YAAW,gBAAe,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,yCAAwC,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,oBAAmB,EAAC,MAAK,oBAAmB,YAAW,gBAAe,QAAO,OAAM,SAAQ,QAAU,iBAAgB,QAAU,UAAS,uCAAsC,WAAU,QAAU,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,UAAO,OAAM;;;ACiBxqJ,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kCAAkC;AAAA,IAC9B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,4BAA4B;AAAA,IACxB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,kCAAkC;AAAA,IAC9B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gCAAgC;AAAA,IAC5B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,sBAAsB;AAAA,IAClB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
