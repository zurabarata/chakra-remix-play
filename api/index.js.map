{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "/Users/zurab/WebstormProjects/chakra-remix-play/app/root.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/index.tsx", "../app/components/NavBarDarkThemeSwitcher.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me.tsx", "../app/routes/me/SidebarWithHeader.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/SocialUserProfileSimple.tsx", "../app/utils/db.server.ts", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/SidebarWithHeader.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/NoteCard.tsx", "/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/index.tsx", "../app/routes/me/NoteCard.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from 'react-dom/server'\nimport { CacheProvider } from '@emotion/react'\nimport createEmotionServer from '@emotion/server/create-instance'\nimport { RemixServer } from '@remix-run/react'\nimport type { EntryContext } from '@remix-run/node' // Depends on the runtime you choose\n\nimport { ServerStyleContext } from './context'\nimport createEmotionCache from './createEmotionCache'\n\nexport default function handleRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    remixContext: EntryContext,\n) {\n  const cache = createEmotionCache()\n  const { extractCriticalToChunks } = createEmotionServer(cache)\n\n  const html = renderToString(\n      <ServerStyleContext.Provider value={null}>\n        <CacheProvider value={cache}>\n          <RemixServer context={remixContext} url={request.url} />\n        </CacheProvider>\n      </ServerStyleContext.Provider>,\n  )\n\n  const chunks = extractCriticalToChunks(html)\n\n  const markup = renderToString(\n      <ServerStyleContext.Provider value={chunks.styles}>\n        <CacheProvider value={cache}>\n          <RemixServer context={remixContext} url={request.url} />\n        </CacheProvider>\n      </ServerStyleContext.Provider>,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import React, { createContext } from 'react'\n\nexport interface ServerStyleContextData {\n    key: string\n    ids: Array<string>\n    css: string\n}\n\nexport const ServerStyleContext = createContext<ServerStyleContextData[] | null>(null)\n\nexport interface ClientStyleContextData {\n    reset: () => void\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(null)\n", "import createCache from '@emotion/cache'\n\nexport default function createEmotionCache() {\n    return createCache({ key: 'css' })\n}\n", "// root.tsx\nimport React, { useContext, useEffect } from 'react'\nimport { withEmotionCache } from '@emotion/react'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react'\nimport { MetaFunction, LinksFunction } from '@remix-run/node' // Depends on the runtime you choose\n\nimport { ServerStyleContext, ClientStyleContext } from './context'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n    { rel: 'preconnect', href: 'https://fonts.gstaticom' },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap'\n    },\n  ]\n}\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n    ({ children }: DocumentProps, emotionCache) => {\n      const serverStyleData = useContext(ServerStyleContext);\n      const clientStyleData = useContext(ClientStyleContext);\n\n      // Only executed on client\n      useEffect(() => {\n        // re-link sheet container\n        emotionCache.sheet.container = document.head;\n        // re-inject tags\n        const tags = emotionCache.sheet.tags;\n        emotionCache.sheet.flush();\n        tags.forEach((tag) => {\n          (emotionCache.sheet as any)._insertTag(tag);\n        });\n        // reset cache to reapply global styles\n        clientStyleData?.reset();\n      }, []);\n\n      return (\n          <html lang=\"en\">\n          <head>\n            <Meta />\n            <Links />\n            {serverStyleData?.map(({ key, ids, css }) => (\n                <style\n                    key={key}\n                    data-emotion={`${key} ${ids.join(' ')}`}\n                    dangerouslySetInnerHTML={{ __html: css }}\n                />\n            ))}\n          </head>\n          <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n          </body>\n          </html>\n      );\n    }\n);\n\nexport default function App() {\n    return (\n        <Document>\n            <ChakraProvider>\n                <Outlet />\n            </ChakraProvider>\n        </Document>\n    )\n}\n", "import {Box} from \"@chakra-ui/react\";\nimport NavBarDarkThemeSwitcher from \"~/components/NavBarDarkThemeSwitcher\";\n\n\nexport default function Index() {\n    return (\n        <>\n            <NavBarDarkThemeSwitcher />\n            <Box p={4}>\n            </Box></>\n    );\n}\n", "import { ReactNode } from 'react';\nimport {\n    Box,\n    Flex,\n    Avatar,\n    Link,\n    Button,\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    MenuDivider,\n    useDisclosure,\n    useColorModeValue,\n    Stack,\n    useColorMode,\n    Center,\n} from '@chakra-ui/react';\nimport { MoonIcon, SunIcon } from '@chakra-ui/icons';\n\nconst NavLink = ({ children }: { children: ReactNode }) => (\n    <Link\n        px={2}\n        py={1}\n        rounded={'md'}\n        _hover={{\n            textDecoration: 'none',\n            bg: useColorModeValue('gray.200', 'gray.700'),\n        }}\n        href={'#'}>\n        {children}\n    </Link>\n);\n\nexport default function NavBarDarkThemeSwitcher() {\n    const { colorMode, toggleColorMode } = useColorMode();\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    return (\n        <>\n            <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n                <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n                    <Button onClick={toggleColorMode}>\n                        {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n                    </Button>\n\n                    <Flex alignItems={'center'}>\n                        <Stack direction={'row'} spacing={7}>\n\n                            <Menu>\n                                <MenuButton\n                                    as={Button}\n                                    rounded={'full'}\n                                    variant={'link'}\n                                    cursor={'pointer'}\n                                    minW={0}>\n                                    <Avatar\n                                        size={'sm'}\n                                        src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                    />\n                                </MenuButton>\n                                <MenuList alignItems={'center'}>\n                                    <br />\n                                    <Center>\n                                        <Avatar\n                                            size={'2xl'}\n                                            src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                        />\n                                    </Center>\n                                    <br />\n                                    <Center>\n                                        <p>\u10D6\u10E3\u10E0\u10D0\u10D1</p>\n                                    </Center>\n                                    <br />\n                                    <MenuDivider />\n                                    <MenuItem>Your Servers</MenuItem>\n                                    <MenuItem>Account Settings</MenuItem>\n                                    <MenuItem>Logout</MenuItem>\n                                </MenuList>\n                            </Menu>\n                        </Stack>\n                    </Flex>\n                </Flex>\n            </Box>\n        </>\n    );\n}\n", "import NavBarDarkThemeSwitcher from \"~/components/NavBarDarkThemeSwitcher\";\nimport {Box} from \"@chakra-ui/react\";\nimport {Outlet} from \"@remix-run/react\";\nimport SidebarWithHeader from \"~/routes/me/SidebarWithHeader\";\n\n\nexport default function MeRoute() {\n  return (\n          <SidebarWithHeader>\n              <Box p={4}>\n                  <Outlet />\n              </Box>\n          </SidebarWithHeader>\n\n  );\n}\n", "import React, { ReactNode } from 'react';\nimport {\n    IconButton,\n    Avatar,\n    Box,\n    CloseButton,\n    Flex,\n    HStack,\n    VStack,\n    Icon,\n    useColorModeValue,\n    Link,\n    Drawer,\n    DrawerContent,\n    Text,\n    Image,\n    useDisclosure,\n    BoxProps,\n    FlexProps,\n    Menu,\n    MenuButton,\n    MenuDivider,\n    MenuItem,\n    MenuList, Button, useColorMode, Stack, Center,\n} from '@chakra-ui/react';\nimport {\n    FiHome,\n    FiTrendingUp,\n    FiCompass,\n    FiStar,\n    FiSettings,\n    FiMenu,\n    FiBell,\n    FiChevronDown,\n} from 'react-icons/fi';\nimport { IconType } from 'react-icons';\nimport { ReactText } from 'react';\nimport {MoonIcon, SunIcon} from \"@chakra-ui/icons\";\n\ninterface LinkItemProps {\n    name: string;\n    icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n    { name: 'Home', icon: FiHome },\n    { name: 'Trending', icon: FiTrendingUp },\n    { name: 'Explore', icon: FiCompass },\n    { name: 'Favourites', icon: FiStar },\n    { name: 'Settings', icon: FiSettings },\n];\n\nexport default function SidebarWithHeader({\n                                              children,\n                                          }: {\n    children: ReactNode;\n}) {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    return (\n        <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\n            <SidebarContent\n                onClose={() => onClose}\n                display={{ base: 'none', md: 'block' }}\n            />\n            <Drawer\n                autoFocus={false}\n                isOpen={isOpen}\n                placement=\"left\"\n                onClose={onClose}\n                returnFocusOnClose={false}\n                onOverlayClick={onClose}\n                size=\"full\">\n                <DrawerContent>\n                    <SidebarContent onClose={onClose} />\n                </DrawerContent>\n            </Drawer>\n            {/* mobilenav */}\n            <MobileNav onOpen={onOpen} />\n            <Box ml={{ base: 0, md: 60 }} p=\"4\">\n                {children}\n            </Box>\n        </Box>\n    );\n}\n\ninterface SidebarProps extends BoxProps {\n    onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n    return (\n        <Box\n            transition=\"3s ease\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderRight=\"1px\"\n            borderRightColor={useColorModeValue('gray.200', 'gray.700')}\n            w={{ base: 'full', md: 60 }}\n            pos=\"fixed\"\n            h=\"full\"\n            {...rest}>\n            <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n                <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\n            </Flex>\n            {LinkItems.map((link) => (\n                <NavItem key={link.name} icon={link.icon}>\n                    {link.name}\n                </NavItem>\n            ))}\n        </Box>\n    );\n};\n\ninterface NavItemProps extends FlexProps {\n    icon: IconType;\n    children: ReactText;\n}\nconst NavItem = ({ icon, children, ...rest }: NavItemProps) => {\n    return (\n        <Link href=\"#\" style={{ textDecoration: 'none' }} _focus={{ boxShadow: 'none' }}>\n            <Flex\n                align=\"center\"\n                p=\"4\"\n                mx=\"4\"\n                borderRadius=\"lg\"\n                role=\"group\"\n                cursor=\"pointer\"\n                _hover={{\n                    bg: 'cyan.400',\n                    color: 'white',\n                }}\n                {...rest}>\n                {icon && (\n                    <Icon\n                        mr=\"4\"\n                        fontSize=\"16\"\n                        _groupHover={{\n                            color: 'white',\n                        }}\n                        as={icon}\n                    />\n                )}\n                {children}\n            </Flex>\n        </Link>\n    );\n};\n\ninterface MobileProps extends FlexProps {\n    onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n    const { colorMode, toggleColorMode } = useColorMode();\n    return (\n        <Flex\n            ml={{ base: 0, md: 60 }}\n            px={{ base: 4, md: 4 }}\n            height=\"20\"\n            alignItems=\"center\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderBottomWidth=\"1px\"\n            borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\n            justifyContent={{ base: 'space-between', md: 'flex-end' }}\n            {...rest}>\n            <IconButton\n                display={{ base: 'flex', md: 'none' }}\n                onClick={onOpen}\n                variant=\"outline\"\n                aria-label=\"open menu\"\n                icon={<FiMenu />}\n            />\n\n            <Text\n                display={{ base: 'flex', md: 'none' }}\n                fontSize=\"2xl\"\n                fontFamily=\"monospace\"\n                fontWeight=\"bold\">\n                Logo\n            </Text>\n\n            <HStack spacing={{ base: '0', md: '6' }}>\n                <Button onClick={toggleColorMode}>\n                    {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n                </Button>\n                <IconButton\n                    size=\"lg\"\n                    variant=\"ghost\"\n                    aria-label=\"open menu\"\n                    icon={<FiBell />}\n                />\n                <Flex alignItems={'center'}>\n                    <Stack direction={'row'} spacing={7}>\n\n                        <Menu>\n                            <MenuButton\n                                as={Button}\n                                rounded={'full'}\n                                variant={'link'}\n                                cursor={'pointer'}\n                                minW={0}>\n                                <Avatar\n                                    size={'sm'}\n                                    src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                />\n                            </MenuButton>\n                            <MenuList alignItems={'center'}>\n                                <br />\n                                <Center>\n                                    <Avatar\n                                        size={'2xl'}\n                                        src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                    />\n                                </Center>\n                                <br />\n                                <Center>\n                                    <p>\u10D6\u10E3\u10E0\u10D0\u10D1</p>\n                                </Center>\n                                <br />\n                                <MenuDivider />\n                                <MenuItem>Your Servers</MenuItem>\n                                <MenuItem>Account Settings</MenuItem>\n                                <MenuItem>Logout</MenuItem>\n                            </MenuList>\n                        </Menu>\n                    </Stack>\n                </Flex>\n            </HStack>\n        </Flex>\n    );\n};\n", "import {\n    Heading,\n    Avatar,\n    Box,\n    Center,\n    Text,\n    Stack,\n    Link,\n    Badge,\n    useColorModeValue,\n} from '@chakra-ui/react';\nimport { db } from \"~/utils/db.server\";\nimport { json } from \"@remix-run/node\";\nimport type {\n    LinksFunction,\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData, Link as RemixLink} from \"@remix-run/react\";\n\ntype LoaderData = {\n    noteListItems: Array<{ id: string; name: string }>;\n};\n\nexport const loader: LoaderFunction = async () => {\n    const data: LoaderData = {\n        noteListItems: await db.note.findMany(),\n    };\n    return json(data);\n};\n\nexport default function SocialProfileSimple() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <Center py={6}>\n            <Box\n                maxW={'320px'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'lg'}\n                p={6}\n                textAlign={'center'}>\n                <Avatar\n                    size={'xl'}\n                    src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                    mb={4}\n                    pos={'relative'}\n                    _after={{\n                        content: '\"\"',\n                        w: 4,\n                        h: 4,\n                        bg: 'green.300',\n                        border: '2px solid white',\n                        rounded: 'full',\n                        pos: 'absolute',\n                        bottom: 0,\n                        right: 3,\n                    }}\n                />\n                <Heading fontSize={'2xl'} fontFamily={'body'}>\n                    Zurab Baratashvili\n                </Heading>\n                <Text fontWeight={600} color={'gray.500'} mb={4}>\n                    @zurabarata\n                </Text>\n                <Text\n                    textAlign={'center'}\n                    color={useColorModeValue('gray.700', 'gray.400')}\n                    px={3}>\n                    Players' agent, software developer and entrepreneur.{' '}\n                    <Link href={'#'} color={'blue.400'}>\n                        #tag\n                    </Link>{' '}\n                </Text>\n\n                <Stack align={'center'} justify={'center'} direction={'row'} mt={6}>\n                    <Badge\n                        px={2}\n                        py={1}\n                        bg={useColorModeValue('gray.50', 'gray.800')}\n                        fontWeight={'400'}>\n                        #sports\n                    </Badge>\n                    <Badge\n                        px={2}\n                        py={1}\n                        bg={useColorModeValue('gray.50', 'gray.800')}\n                        fontWeight={'400'}>\n                        #technology\n                    </Badge>\n                </Stack>\n\n                <Stack align={'center'} justify={'center'} direction={'row'} mt={6}>\n                    <ul>\n                        {data?.noteListItems.map(note => (\n                            <li key={note.id}>\n                                <Text>{note.name}</Text>\n                            </li>\n                        ))}\n                    </ul>\n                </Stack>\n\n            </Box>\n        </Center>\n    );\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n    var __db: PrismaClient | undefined;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n    db = new PrismaClient();\n    db.$connect();\n} else {\n    if (!global.__db) {\n        global.__db = new PrismaClient();\n        global.__db.$connect();\n    }\n    db = global.__db;\n}\n\nexport { db };\n", "import React, { ReactNode } from 'react';\nimport {\n    IconButton,\n    Avatar,\n    Box,\n    CloseButton,\n    Flex,\n    HStack,\n    VStack,\n    Icon,\n    useColorModeValue,\n    Link,\n    Drawer,\n    DrawerContent,\n    Text,\n    Image,\n    useDisclosure,\n    BoxProps,\n    FlexProps,\n    Menu,\n    MenuButton,\n    MenuDivider,\n    MenuItem,\n    MenuList, Button, useColorMode, Stack, Center,\n} from '@chakra-ui/react';\nimport {\n    FiHome,\n    FiTrendingUp,\n    FiCompass,\n    FiStar,\n    FiSettings,\n    FiMenu,\n    FiBell,\n    FiChevronDown,\n} from 'react-icons/fi';\nimport { IconType } from 'react-icons';\nimport { ReactText } from 'react';\nimport {MoonIcon, SunIcon} from \"@chakra-ui/icons\";\n\ninterface LinkItemProps {\n    name: string;\n    icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n    { name: 'Home', icon: FiHome },\n    { name: 'Trending', icon: FiTrendingUp },\n    { name: 'Explore', icon: FiCompass },\n    { name: 'Favourites', icon: FiStar },\n    { name: 'Settings', icon: FiSettings },\n];\n\nexport default function SidebarWithHeader({\n                                              children,\n                                          }: {\n    children: ReactNode;\n}) {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    return (\n        <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\n            <SidebarContent\n                onClose={() => onClose}\n                display={{ base: 'none', md: 'block' }}\n            />\n            <Drawer\n                autoFocus={false}\n                isOpen={isOpen}\n                placement=\"left\"\n                onClose={onClose}\n                returnFocusOnClose={false}\n                onOverlayClick={onClose}\n                size=\"full\">\n                <DrawerContent>\n                    <SidebarContent onClose={onClose} />\n                </DrawerContent>\n            </Drawer>\n            {/* mobilenav */}\n            <MobileNav onOpen={onOpen} />\n            <Box ml={{ base: 0, md: 60 }} p=\"4\">\n                {children}\n            </Box>\n        </Box>\n    );\n}\n\ninterface SidebarProps extends BoxProps {\n    onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n    return (\n        <Box\n            transition=\"3s ease\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderRight=\"1px\"\n            borderRightColor={useColorModeValue('gray.200', 'gray.700')}\n            w={{ base: 'full', md: 60 }}\n            pos=\"fixed\"\n            h=\"full\"\n            {...rest}>\n            <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n                <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\n            </Flex>\n            {LinkItems.map((link) => (\n                <NavItem key={link.name} icon={link.icon}>\n                    {link.name}\n                </NavItem>\n            ))}\n        </Box>\n    );\n};\n\ninterface NavItemProps extends FlexProps {\n    icon: IconType;\n    children: ReactText;\n}\nconst NavItem = ({ icon, children, ...rest }: NavItemProps) => {\n    return (\n        <Link href=\"#\" style={{ textDecoration: 'none' }} _focus={{ boxShadow: 'none' }}>\n            <Flex\n                align=\"center\"\n                p=\"4\"\n                mx=\"4\"\n                borderRadius=\"lg\"\n                role=\"group\"\n                cursor=\"pointer\"\n                _hover={{\n                    bg: 'cyan.400',\n                    color: 'white',\n                }}\n                {...rest}>\n                {icon && (\n                    <Icon\n                        mr=\"4\"\n                        fontSize=\"16\"\n                        _groupHover={{\n                            color: 'white',\n                        }}\n                        as={icon}\n                    />\n                )}\n                {children}\n            </Flex>\n        </Link>\n    );\n};\n\ninterface MobileProps extends FlexProps {\n    onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n    const { colorMode, toggleColorMode } = useColorMode();\n    return (\n        <Flex\n            ml={{ base: 0, md: 60 }}\n            px={{ base: 4, md: 4 }}\n            height=\"20\"\n            alignItems=\"center\"\n            bg={useColorModeValue('white', 'gray.900')}\n            borderBottomWidth=\"1px\"\n            borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\n            justifyContent={{ base: 'space-between', md: 'flex-end' }}\n            {...rest}>\n            <IconButton\n                display={{ base: 'flex', md: 'none' }}\n                onClick={onOpen}\n                variant=\"outline\"\n                aria-label=\"open menu\"\n                icon={<FiMenu />}\n            />\n\n            <Text\n                display={{ base: 'flex', md: 'none' }}\n                fontSize=\"2xl\"\n                fontFamily=\"monospace\"\n                fontWeight=\"bold\">\n                Logo\n            </Text>\n\n            <HStack spacing={{ base: '0', md: '6' }}>\n                <Button onClick={toggleColorMode}>\n                    {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n                </Button>\n                <IconButton\n                    size=\"lg\"\n                    variant=\"ghost\"\n                    aria-label=\"open menu\"\n                    icon={<FiBell />}\n                />\n                <Flex alignItems={'center'}>\n                    <Stack direction={'row'} spacing={7}>\n\n                        <Menu>\n                            <MenuButton\n                                as={Button}\n                                rounded={'full'}\n                                variant={'link'}\n                                cursor={'pointer'}\n                                minW={0}>\n                                <Avatar\n                                    size={'sm'}\n                                    src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                />\n                            </MenuButton>\n                            <MenuList alignItems={'center'}>\n                                <br />\n                                <Center>\n                                    <Avatar\n                                        size={'2xl'}\n                                        src={'https://scontent.ftxl3-2.fna.fbcdn.net/v/t1.6435-9/80679191_10212511923913467_3015189078992748544_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=174925&_nc_ohc=dBpRfDeJdj4AX8lGUMJ&_nc_ht=scontent.ftxl3-2.fna&oh=00_AT-PipysJh41aBY7VKqsDLJueTsbrxrL5keVLsqxrSAKcQ&oe=628129A3'}\n                                    />\n                                </Center>\n                                <br />\n                                <Center>\n                                    <p>\u10D6\u10E3\u10E0\u10D0\u10D1</p>\n                                </Center>\n                                <br />\n                                <MenuDivider />\n                                <MenuItem>Your Servers</MenuItem>\n                                <MenuItem>Account Settings</MenuItem>\n                                <MenuItem>Logout</MenuItem>\n                            </MenuList>\n                        </Menu>\n                    </Stack>\n                </Flex>\n            </HStack>\n        </Flex>\n    );\n};\n", "import {\n    Box,\n    Center,\n    Heading,\n    Text,\n    Stack,\n    Avatar,\n    Image,\n    useColorModeValue,\n} from '@chakra-ui/react';\nimport type {\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport type { Note } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\nexport default function NoteCard() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <Center py={6}>\n            <Box\n                maxW={'890px'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                p={6}\n                overflow={'hidden'}>\n                <Box\n                    h={'210px'}\n                    bg={'gray.100'}\n                    mt={-6}\n                    mx={-6}\n                    mb={6}\n                    pos={'relative'}>\n{/*                    <img\n                        src={\n                            'https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n                        }\n                    />*/}\n                </Box>\n                <Stack>\n                    <Heading\n                        whiteSpace={'pre-wrap'}\n                        color={useColorModeValue('gray.700', 'white')}\n                        fontSize={'2xl'}\n                        fontFamily={'body'}>\n                        {data.randomNote.name}\n                    </Heading>\n                    <Text color={'gray.500'} whiteSpace={'pre-wrap'}\n                    >\n                        {data.randomNote.content}\n                    </Text>\n                </Stack>\n            </Box>\n        </Center>\n    );\n}\n", "import SocialProfileSimple from \"~/routes/me/SocialUserProfileSimple\";\nimport { db } from \"~/utils/db.server\";\nimport { json } from \"@remix-run/node\";\nimport type {\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport NoteCard from \"~/routes/me/NoteCard\";\nimport {Note} from \"@prisma/client\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\n\n\nexport default function MeIndexRoute() {\n    return (\n        <div>\n            <NoteCard />\n        </div>\n    )\n}\n", "import {\n    Box,\n    Center,\n    Heading,\n    Text,\n    Stack,\n    Avatar,\n    Image,\n    useColorModeValue,\n} from '@chakra-ui/react';\nimport type {\n    LoaderFunction,\n} from \"@remix-run/node\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport type { Note } from \"@prisma/client\";\nimport { db } from \"~/utils/db.server\";\n\ntype LoaderData = { randomNote: Note };\n\nexport const loader: LoaderFunction = async () => {\n    const count = await db.note.count();\n    const randomRowNumber = Math.floor(Math.random() * count);\n    const [randomNote] = await db.note.findMany({\n        take: 1,\n        skip: randomRowNumber\n    });\n    const data: LoaderData = { randomNote };\n    return data;\n};\n\nexport default function NoteCard() {\n    const data = useLoaderData<LoaderData>();\n\n    return (\n        <Center py={6}>\n            <Box\n                maxW={'890px'}\n                w={'full'}\n                bg={useColorModeValue('white', 'gray.900')}\n                boxShadow={'2xl'}\n                rounded={'md'}\n                p={6}\n                overflow={'hidden'}>\n                <Box\n                    h={'210px'}\n                    bg={'gray.100'}\n                    mt={-6}\n                    mx={-6}\n                    mb={6}\n                    pos={'relative'}>\n{/*                    <img\n                        src={\n                            'https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\n                        }\n                    />*/}\n                </Box>\n                <Stack>\n                    <Heading\n                        whiteSpace={'pre-wrap'}\n                        color={useColorModeValue('gray.700', 'white')}\n                        fontSize={'2xl'}\n                        fontFamily={'body'}>\n                        {data.randomNote.name}\n                    </Heading>\n                    <Text color={'gray.500'} whiteSpace={'pre-wrap'}\n                    >\n                        {data.randomNote.content}\n                    </Text>\n                </Stack>\n            </Box>\n        </Center>\n    );\n}\n", "export default {'version':'13811318','entry':{'module':'/build/entry.client-6O2EI6HZ.js','imports':['/build/_shared/chunk-VOAMVE4R.js','/build/_shared/chunk-ESKKTO6M.js','/build/_shared/chunk-3BTP4EJN.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4WV3KXP3.js','imports':['/build/_shared/chunk-UD24RJCM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-FZ2MRMXK.js','imports':['/build/_shared/chunk-FW4W7EL3.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/me':{'id':'routes/me','parentId':'root','path':'me','index':undefined,'caseSensitive':undefined,'module':'/build/routes/me-4PHF5PST.js','imports':['/build/_shared/chunk-KE6R4XUY.js','/build/_shared/chunk-FW4W7EL3.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/me/NoteCard':{'id':'routes/me/NoteCard','parentId':'routes/me','path':'NoteCard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/me/NoteCard-WAVCMKUD.js','imports':['/build/_shared/chunk-DK4GTAOI.js','/build/_shared/chunk-PZRMU4NX.js','/build/_shared/chunk-UD24RJCM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/me/SidebarWithHeader':{'id':'routes/me/SidebarWithHeader','parentId':'routes/me','path':'SidebarWithHeader','index':undefined,'caseSensitive':undefined,'module':'/build/routes/me/SidebarWithHeader-25P53UMF.js','imports':['/build/_shared/chunk-UD24RJCM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/me/SocialUserProfileSimple':{'id':'routes/me/SocialUserProfileSimple','parentId':'routes/me','path':'SocialUserProfileSimple','index':undefined,'caseSensitive':undefined,'module':'/build/routes/me/SocialUserProfileSimple-7DS5GJ44.js','imports':['/build/_shared/chunk-PZRMU4NX.js','/build/_shared/chunk-UD24RJCM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/me/index':{'id':'routes/me/index','parentId':'routes/me','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/me/index-BRUYRMC2.js','imports':['/build/_shared/chunk-DK4GTAOI.js','/build/_shared/chunk-PZRMU4NX.js','/build/_shared/chunk-UD24RJCM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-13811318.js'};", "\nimport * as entryServer from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/entry.server.tsx\";\nimport * as route0 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/root.tsx\";\nimport * as route1 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/index.tsx\";\nimport * as route2 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me.tsx\";\nimport * as route3 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/SocialUserProfileSimple.tsx\";\nimport * as route4 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/SidebarWithHeader.tsx\";\nimport * as route5 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/NoteCard.tsx\";\nimport * as route6 from \"/Users/zurab/WebstormProjects/chakra-remix-play/app/routes/me/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/me\": {\n      id: \"routes/me\",\n      parentId: \"root\",\n      path: \"me\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/me/SocialUserProfileSimple\": {\n      id: \"routes/me/SocialUserProfileSimple\",\n      parentId: \"routes/me\",\n      path: \"SocialUserProfileSimple\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/me/SidebarWithHeader\": {\n      id: \"routes/me/SidebarWithHeader\",\n      parentId: \"routes/me\",\n      path: \"SidebarWithHeader\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/me/NoteCard\": {\n      id: \"routes/me/NoteCard\",\n      parentId: \"routes/me\",\n      path: \"NoteCard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/me/index\": {\n      id: \"routes/me/index\",\n      parentId: \"routes/me\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };"],
  "mappings": "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",
  "names": []
}
